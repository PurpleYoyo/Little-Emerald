raw `
.align 2
OldaleSecondaryMart::
	.2byte ITEM_AMULET_COIN
	.2byte ITEM_SMOKE_BALL
	.2byte ITEM_NONE
	release
	end

.align 2
PetalburgSecondaryMart::
	.2byte ITEM_QUICK_CLAW
	.2byte ITEM_METRONOME
	.2byte ITEM_FLOAT_STONE
	.2byte ITEM_BINDING_BAND
	.2byte ITEM_GRIP_CLAW
	.2byte ITEM_NONE
	release
	end

.align 2
RustboroSecondaryMart::
	.2byte ITEM_RAZOR_CLAW
	.2byte ITEM_RAZOR_FANG
	.2byte ITEM_KINGS_ROCK
	.2byte ITEM_BIG_ROOT
	.2byte ITEM_SCOPE_LENS
	.2byte ITEM_NONE
	release
	end

.align 2
SlateportSecondaryMart::
	.2byte ITEM_MUSCLE_BAND
	.2byte ITEM_WISE_GLASSES
	.2byte ITEM_PUNCHING_GLOVE
	.2byte ITEM_UTILITY_UMBRELLA
	.2byte ITEM_ABILITY_SHIELD
	.2byte ITEM_COVERT_CLOAK
	.2byte ITEM_HEAVY_DUTY_BOOTS
	.2byte ITEM_SAFETY_GOGGLES
	.2byte ITEM_NONE
	release
	end

.align 2
MauvilleSecondaryMart::
	.2byte ITEM_BLACK_GLASSES
	.2byte ITEM_CHARCOAL
	.2byte ITEM_DRAGON_FANG
	.2byte ITEM_FAIRY_FEATHER
	.2byte ITEM_MAGNET
	.2byte ITEM_MIRACLE_SEED
	.2byte ITEM_MYSTIC_WATER
	.2byte ITEM_NEVER_MELT_ICE
	.2byte ITEM_TWISTED_SPOON
	.2byte ITEM_NONE
	release
	end

.align 2
VerdanturfSecondaryMart::
	.2byte ITEM_GRASSY_SEED
	.2byte ITEM_ELECTRIC_SEED
	.2byte ITEM_MISTY_SEED
	.2byte ITEM_PSYCHIC_SEED
	.2byte ITEM_MENTAL_HERB
	.2byte ITEM_MIRROR_HERB
	.2byte ITEM_NONE
	release
	end

.align 2
FallarborSecondaryMart::
	.2byte ITEM_BLACK_BELT
	.2byte ITEM_HARD_STONE
	.2byte ITEM_METAL_COAT
	.2byte ITEM_POISON_BARB
	.2byte ITEM_SHARP_BEAK
	.2byte ITEM_SILK_SCARF
	.2byte ITEM_SILVER_POWDER
	.2byte ITEM_SOFT_SAND
	.2byte ITEM_SPELL_TAG
	.2byte ITEM_NONE
	release
	end

.align 2
LavaridgeSecondaryMart::
	.2byte ITEM_HEAT_ROCK
	.2byte ITEM_DAMP_ROCK
	.2byte ITEM_ICY_ROCK
	.2byte ITEM_SMOOTH_ROCK
	.2byte ITEM_LIGHT_CLAY
	.2byte ITEM_TERRAIN_EXTENDER
	.2byte ITEM_ROOM_SERVICE
	.2byte ITEM_ZOOM_LENS
	.2byte ITEM_NONE
	release
	end

.align 2
FortreeSecondaryMart::
	.2byte ITEM_RED_CARD
	.2byte ITEM_BLUNDER_POLICY
	.2byte ITEM_WEAKNESS_POLICY
	.2byte ITEM_LOADED_DICE
	.2byte ITEM_AIR_BALLOON
	.2byte ITEM_ROCKY_HELMET
	.2byte ITEM_WIDE_LENS
	.2byte ITEM_NONE
	release
	end

.align 2
MossdeepSecondaryMart::
	.2byte ITEM_WHITE_HERB
	.2byte ITEM_POWER_HERB
	.2byte ITEM_SHED_SHELL
	.2byte ITEM_THROAT_SPRAY
	.2byte ITEM_EXPERT_BELT
	.2byte ITEM_NONE
	release
	end

.align 2
SootopolisSecondaryMart::
	.2byte ITEM_PROTECTIVE_PADS
	.2byte ITEM_RING_TARGET
	.2byte ITEM_CLEAR_AMULET
	.2byte ITEM_IRON_BALL
	.2byte ITEM_NONE
	release
	end

Common_EventScript_PkmnCenterNurse::
	lock
	faceplayer
	setvar VAR_0x8004, 0
	specialvar VAR_RESULT, CountPlayerTrainerStars
	goto_if_eq VAR_RESULT, 4, EventScript_PkmnCenterNurse_GoldCard

	goto EventScript_PkmnCenterNurse_HealPkmn
	end

EventScript_PkmnCenterNurse_Goodbye::
	return

@ VAR_0x8004 is 1 when player has Gold Card; jumps are identical
EventScript_PkmnCenterNurse_HealPkmn::
	incrementgamestat GAME_STAT_USED_POKECENTER
	call EventScript_PkmnCenterNurse_TakeAndHealPkmn
	end

EventScript_PkmnCenterNurse_IllTakeYourPkmn::
	message gText_IllTakeYourPkmn
	return

EventScript_PkmnCenterNurse_IllTakeYourPkmn2::
	message gText_IllTakeYourPkmn2
	return

EventScript_PkmnCenterNurse_TakeAndHealPkmn::
	applymovement VAR_0x800B, Movement_PkmnCenterNurse_Turn @ Changed from Common_Movement_WalkInPlaceFasterLeft to force the follower to enter their Pok√© Ball
	waitmovement 0
	dofieldeffect FLDEFF_POKECENTER_HEAL
.if OW_UNION_DISABLE_CHECK == FALSE && OW_FLAG_MOVE_UNION_ROOM_CHECK != 0
	setflag OW_FLAG_MOVE_UNION_ROOM_CHECK
	call CableClub_OnResume
	clearflag OW_FLAG_MOVE_UNION_ROOM_CHECK
.endif
	waitfieldeffect FLDEFF_POKECENTER_HEAL
	applymovement VAR_0x800B, Common_Movement_WalkInPlaceFasterDown
	waitmovement 0
	special HealPlayerParty
	callnative UpdateFollowingPokemon
	return

EventScript_PkmnCenterNurse_CheckTrainerHillAndUnionRoom::
	specialvar VAR_RESULT, PlayerNotAtTrainerHillEntrance
	goto_if_eq VAR_RESULT, 0, EventScript_PkmnCenterNurse_ReturnPkmn
	specialvar VAR_RESULT, BufferUnionRoomPlayerName
	copyvar VAR_0x8008, VAR_RESULT
	goto_if_eq VAR_0x8008, 0, EventScript_PkmnCenterNurse_ReturnPkmn
	goto_if_eq VAR_0x8008, 1, EventScript_PkmnCenterNurse_PlayerWaitingInUnionRoom
	end

@ VAR_0x8004 is 1 when player has Gold Card
EventScript_PkmnCenterNurse_ReturnPkmn::
	goto_if_eq VAR_0x8004, 1, EventScript_PkmnCenterNurse_ReturnPkmn2
	message gText_RestoredPkmnToFullHealth
	waitmessage
	applymovement VAR_0x800B, Movement_PkmnCenterNurse_Bow
	waitmovement 0
	message gText_WeHopeToSeeYouAgain
	return

EventScript_PkmnCenterNurse_ReturnPkmn2::
	message gText_ThankYouForWaiting
	waitmessage
	applymovement VAR_0x800B, Movement_PkmnCenterNurse_Bow
	waitmovement 0
	message gText_WeHopeToSeeYouAgain2
	return

EventScript_PkmnCenterNurse_PlayerWaitingInUnionRoom::
	goto_if_set FLAG_NURSE_UNION_ROOM_REMINDER, EventScript_PkmnCenterNurse_ReturnPkmn
	msgbox gText_RestoredPkmnToFullHealth, MSGBOX_DEFAULT
	setflag FLAG_NURSE_UNION_ROOM_REMINDER
	message CableClub_Text_PlayerIsWaiting
	waitmessage
	applymovement VAR_0x800B, Movement_PkmnCenterNurse_Bow
	waitmovement 0
	message gText_WeHopeToSeeYouAgain
	return

EventScript_PkmnCenterNurse_CheckPokerus::
	specialvar VAR_RESULT, IsPokerusInParty
	goto_if_eq VAR_RESULT, TRUE, EventScript_PkmnCenterNurse_ExplainPokerus
	goto_if_eq VAR_RESULT, FALSE, EventScript_PkmnCenterNurse_CheckTrainerHillAndUnionRoom
	end

EventScript_PkmnCenterNurse_ExplainPokerus::
	message gText_PokerusExplanation
	setflag FLAG_POKERUS_EXPLAINED
	return

EventScript_PkmnCenterNurse_GoldCard::
	goto_if_set FLAG_NURSE_MENTIONS_GOLD_CARD, EventScript_PkmnCenterNurse_AskForUsual
	setflag FLAG_NURSE_MENTIONS_GOLD_CARD
	msgbox gText_WelcomeCutShort, MSGBOX_DEFAULT
	playse SE_PIN
	applymovement VAR_0x800B, Common_Movement_ExclamationMark
	waitmovement 0
	applymovement VAR_0x800B, Common_Movement_Delay48
	waitmovement 0
	msgbox gText_NoticesGoldCard, MSGBOX_YESNO
	goto_if_eq VAR_RESULT, YES, EventScript_PkmnCenterNurse_GoldCardHealPkmn
	message gText_WeHopeToSeeYouAgain2
	return

EventScript_PkmnCenterNurse_AskForUsual::
	msgbox gText_YouWantTheUsual, MSGBOX_YESNO
	goto_if_eq VAR_RESULT, YES, EventScript_PkmnCenterNurse_GoldCardHealPkmn
	message gText_WeHopeToSeeYouAgain2
	return

EventScript_PkmnCenterNurse_GoldCardHealPkmn::
	setvar VAR_0x8004, 1
	goto EventScript_PkmnCenterNurse_HealPkmn
	end

Movement_PkmnCenterNurse_Bow:
	nurse_joy_bow
	delay_4
	step_end

Movement_PkmnCenterNurse_Turn:
	walk_in_place_faster_left
	step_end
`

script EventScript_NatureMintNPC {
	lock
	message(format("Would you like to make a Nature Mint with a Blank Nature Mint?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		goto(End)
	}
	checkitem(ITEM_BLANK_MINT, 1)
	if (var(VAR_RESULT) != 1) { // No Blank Mints
		msgbox(format("You do not have any Blank Nature Mints."))
		goto(End)
	}
	msgbox(format("Which stat would you like the mint to increase?"))
	multichoicegrid(10, 4, MULTI_STAT_NAMES_NO_HP, 2, 0)
	if (var(VAR_RESULT) == 5) { // Exit
		goto(End)
	}
	elif (var(VAR_RESULT) == 0) {
		setvar(RAISE, 0)
	}
	elif (var(VAR_RESULT) == 1) {
		setvar(RAISE, 1)
	}
	elif (var(VAR_RESULT) == 2) {
		setvar(RAISE, 2)
	}
	elif (var(VAR_RESULT) == 3) {
		setvar(RAISE, 3)
	}
	elif (var(VAR_RESULT) == 4) {
		setvar(RAISE, 4)
	}
	msgbox(format("Which stat would you like the mint to decrease?"))
	multichoicegrid(8, 4, MULTI_STAT_NAMES_NO_HP, 2, 0)
	if (var(VAR_RESULT) == 5) { // Exit
		goto(End)
	}
	elif (var(VAR_RESULT) == 0) {
		setvar(LOWER, 0)
	}
	elif (var(VAR_RESULT) == 1) {
		setvar(LOWER, 1)
	}
	elif (var(VAR_RESULT) == 2) {
		setvar(LOWER, 2)
	}
	elif (var(VAR_RESULT) == 3) {
		setvar(LOWER, 3)
	}
	elif (var(VAR_RESULT) == 4) {
		setvar(LOWER, 4)
	}
	if (var(RAISE) == 0 && var(LOWER) == 0 
	    || var(RAISE) == 1 && var(LOWER) == 1
		|| var(RAISE) == 2 && var(LOWER) == 2
		|| var(RAISE) == 3 && var(LOWER) == 3
		|| var(RAISE) == 4 && var(LOWER) == 4) { // Neutral Mint
		message(format("Are you sure you want to make a Neutral Nature Mint?"))
	    yesnobox(5, 2)
		if (var(VAR_RESULT) == 1) {
			giveitem(ITEM_SERIOUS_MINT)
			removeitem(ITEM_BLANK_MINT, 1)
		}
	}
	switch (var(RAISE)) {
		case 0: // + Attack
			switch (var(LOWER)) {
				case 1: // - Defense, Lonely
					message(format("You would like to make a Lonely Nature Mint (+Atk -Def)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_LONELY_MINT) // this plays sfx and sends a message
					removeitem(ITEM_BLANK_MINT, 1)
				case 2: // - Special Attack, Adamant
					message(format("You would like to make an Adamant Nature Mint (+Atk -SpA)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_ADAMANT_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 3: // - Special Defense, Naughty
					message(format("You would like to make a Naughty Nature Mint (+Atk -SpD)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_NAUGHTY_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 4: // - Speed, Brave
					message(format("You would like to make a Brave Nature Mint (+Atk -Spe)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_BRAVE_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				default:
					goto(End)
			}
		case 1: // + Defense
			switch (var(LOWER)) {
				case 0: // - Attack, Bold
					message(format("You would like to make a Bold Nature Mint (+Def -Atk)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_BOLD_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 2: // - Special Attack, Impish
					message(format("You would like to make an Impish Nature Mint (+Def -SpA)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_IMPISH_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 3: // - Special Defense, Lax
					message(format("You would like to make a Lax Nature Mint (+Def -SpD)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_LAX_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 4: // - Speed, Relaxed
					message(format("You would like to make a Relaxed Nature Mint (+Def -Spe)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_RELAXED_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				default:
					goto(End)
			}
		case 2: // + Special Attack
			switch (var(LOWER)) {
				case 0: // - Attack, Modest
					message(format("You would like to make a Modest Nature Mint (+SpA -Atk)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_MODEST_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 1: // - Defense, Mild
					message(format("You would like to make a Mild Nature Mint (+SpA -Def)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_MILD_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 3: // - Special Defense, Rash
					message(format("You would like to make a Rash Nature Mint (+SpA -SpD)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_RASH_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 4: // - Speed, Quiet
					message(format("You would like to make a Quiet Nature Mint (+SpA -Spe)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_QUIET_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				default:
					goto(End)
			}
		case 3: // + Special Defense
			switch (var(LOWER)) {
				case 0: // - Attack, Calm
					message(format("You would like to make a Calm Nature Mint (+SpD -Atk)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_CALM_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 1: // - Defense, Gentle
					message(format("You would like to make a Gentle Nature Mint (+SpD -Def)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_GENTLE_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 2: // - Special Attack, Careful
					message(format("You would like to make a Careful Nature Mint (+SpD -SpA)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_CAREFUL_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 4: // - Speed, Sassy
					message(format("You would like to make a Sassy Nature Mint (+SpD -Spe)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_SASSY_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				default:
					goto(End)
			}
		case 4: // + Speed
			switch (var(LOWER)) {
				case 0: // - Attack, Timid
					message(format("You would like to make a Timid Nature Mint (+Spe -Atk)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_TIMID_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 1: // - Defense, Hasty
					message(format("You would like to make a Hasty Nature Mint (+Spe -Def)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_HASTY_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 2: // - Special Attack, Jolly
					message(format("You would like to make a Jolly Nature Mint (+Spe -SpA)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_JOLLY_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 3: // - Special Defense, Naive
					message(format("You would like to make a Naive Nature Mint (+Spe -SpD)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_NAIVE_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				default:
					goto(End)
			}
	}
	msgbox(format("Come back anytime!"))
	closemessage
	goto(End)
}

script EventScript_PreDamageNPC {
	lock
	msgbox(format("Would you like to Pre-Damage or Pre-Status one of your Pok√©mon?"))
	multichoice(10, 4, MULTI_PREDAMAGE, 0)
	if (var(VAR_RESULT) == 0) { // PreDamage
		special(ChoosePartyMon)
		waitstate
		specialvar(VAR_RESULT, ScriptGetPartyMonSpecies)
		if (var(VAR_RESULT) == SPECIES_EGG) {
			msgbox(format("A Pok√©mon Egg cannot be Pre-Damaged."))
			goto(End)
		}
		special(IsChosenMonFainted)
		if (var(VAR_RESULT) == TRUE) {
			msgbox(format("A Fainted Pok√©mon cannot be Pre-Damaged."))
			goto(End)
		} 
		call(Common_ShowSelectDamageScreen)
		waitstate
		specialvar(0x8007, GetSelectedMonNicknameAndSpecies)
		playmoncry(0x8007, 0)
		waitmoncry
		msgbox(format("Set your {STR_VAR_1}'s HP to {STR_VAR_3}."))
	}
	elif (var(VAR_RESULT) == 1) { // PreStatus
		special(ChoosePartyMon)
		waitstate
		specialvar(VAR_RESULT, ScriptGetPartyMonSpecies)
		if (var(VAR_RESULT) == SPECIES_EGG) {
			msgbox(format("A Pok√©mon Egg cannot be Pre-Statused."))
			goto(End)
		}
		special(IsChosenMonFainted)
		if (var(VAR_RESULT) == TRUE) {
			msgbox(format("A Fainted Pok√©mon cannot be Pre-Statused."))
			goto(End)
		}
		msgbox(format("Which Status would you like to give the Pok√©mon?"))
		multichoicegrid(8, 4, MULTI_STATUSES, 2, 0)
		if (var(VAR_RESULT) == 0) {
			setvar(STATUS, 0)
		} elif (var(VAR_RESULT) == 1) {
			setvar(STATUS, 1)
		} elif (var(VAR_RESULT) == 2) {
			setvar(STATUS, 2)
		} elif (var(VAR_RESULT) == 3) {
			setvar(STATUS, 3)
		} elif (var(VAR_RESULT) == 4) {
			setvar(STATUS, 4)
		} elif (var(VAR_RESULT) == 5) {
			setvar(STATUS, 5)
		}
		switch (var(STATUS)) {
			case 0: // Poison
				special(IsChosenMonSteelType)
				if (var(VAR_RESULT) == TRUE) {
					getseenmon(757) // Salandit
					if (var(VAR_RESULT) == FALSE) {
						msgbox(format("Steel-type Pok√©mon cannot be Poisoned."))
						goto(End)
					}
				}
				special(IsChosenMonPoisonType)
				if (var(VAR_RESULT) == TRUE) {
					getseenmon(757) // Salandit
					if (var(VAR_RESULT) == FALSE) {
						msgbox(format("Poison-type Pok√©mon cannot be Poisoned."))
						goto(End)
					}					
				}
				setstatus1(STATUS1_POISON, VAR_0x8004)
				specialvar(0x8007, GetSelectedMonNicknameAndSpecies)
				playmoncry(0x8007, 0)
				waitmoncry
				msgbox(format("Inflicted your {STR_VAR_1} with Poison."))
			case 1: // Paralysis
				special(IsChosenMonElectricType)
				if (var(VAR_RESULT) == TRUE) {
					msgbox(format("Electric-type Pok√©mon cannot be Paralyzed."))
					goto(End)
				}
				setstatus1(STATUS1_PARALYSIS, VAR_0x8004)
				specialvar(0x8007, GetSelectedMonNicknameAndSpecies)
				playmoncry(0x8007, 0)
				waitmoncry
				msgbox(format("Inflicted your {STR_VAR_1} with Paralysis."))
			case 2: // Sleep
				special(IsChosenMonImmuneToSleepDueToAbility)
				if (var(VAR_RESULT) == TRUE) {
					specialvar(0x8007, GetSelectedMonNicknameAndSpecies)
					msgbox(format("{STR_VAR_1}'s ability prevents it from being put to Sleep."))
					goto(End)
				}
				setstatus1(STATUS1_SLEEP_TURN(1), VAR_0x8004)
				specialvar(0x8007, GetSelectedMonNicknameAndSpecies)
				playmoncry(0x8007, 0)
				waitmoncry
				msgbox(format("Inflicted your {STR_VAR_1} with Sleep."))
			case 3: // Burn
				special(IsChosenMonFireType)
				if (var(VAR_RESULT) == TRUE) {
					msgbox(format("Fire-type Pok√©mon cannot be Burned."))
					goto(End)
				}
				setstatus1(STATUS1_BURN, VAR_0x8004)
				specialvar(0x8007, GetSelectedMonNicknameAndSpecies)
				playmoncry(0x8007, 0)
				waitmoncry
				msgbox(format("Inflicted your {STR_VAR_1} with Burn."))
			case 4: // Freeze
				special(IsChosenMonIceType)
				if (var(VAR_RESULT) == TRUE) {
					msgbox(format("Ice-type Pok√©mon cannot be Frozen."))
					goto(End)
				}
				setstatus1(STATUS1_FREEZE, VAR_0x8004)
				specialvar(0x8007, GetSelectedMonNicknameAndSpecies)
				playmoncry(0x8007, 0)
				waitmoncry
				msgbox(format("Inflicted your {STR_VAR_1} with Freeze."))
			case 5: // Toxic
				special(IsChosenMonSteelType)
				if (var(VAR_RESULT) == TRUE) {
					getseenmon(757) // Salandit
					if (var(VAR_RESULT) == FALSE) {
						msgbox(format("Steel-type Pok√©mon cannot be Badly Poisoned."))
						goto(End)
					}
				}
				special(IsChosenMonPoisonType)
				if (var(VAR_RESULT) == TRUE) {
					getseenmon(757) // Salandit
					if (var(VAR_RESULT) == FALSE) {
						msgbox(format("Poison-type Pok√©mon cannot be Badly Poisoned."))
						goto(End)
					}
				}
				setstatus1(STATUS1_TOXIC_POISON, VAR_0x8004)
				specialvar(0x8007, GetSelectedMonNicknameAndSpecies)
				playmoncry(0x8007, 0)
				waitmoncry
				msgbox(format("Inflicted your {STR_VAR_1} with Toxic Poison."))
			default:
				goto(End)
		}
	}
	goto(End)
}

script EventScript_HyperTrainNPC {
	lock
	msgbox(format("I can Hyper Train or Untrain one of your Pok√©mon in exchange for Bottle Caps."))
	msgbox(format("Would you like to Hyper Train or Untrain one of your Pok√©mon?"))
	multichoice(10, 4, MULTI_HYPERTRAIN, 0)
	if (var(VAR_RESULT) == 0) { // Hyper Train
		checkitem(ITEM_BOTTLE_CAP, 1)
		if (var(VAR_RESULT) != 1) { // No Bottle Caps
			msgbox(format("You do not have any Bottle Caps."))
			goto(End)
		}
		special(ChoosePartyMon)
		waitstate
		specialvar(VAR_RESULT, ScriptGetPartyMonSpecies)
		if (var(VAR_RESULT) == SPECIES_EGG) {
			msgbox(format("A Pok√©mon Egg cannot be Hyper Trained."))
			goto(End)
		}
		msgbox(format("Which stat would you like to train?"))
		multichoicegrid(10, 4, MULTI_STAT_NAMES, 2, 0)
		if (var(VAR_RESULT) == 0)
		{
			setvar(STAT, 0)
			canhypertrain(0, VAR_0x8004)
		}
		elif (var(VAR_RESULT) == 1)
		{
			setvar(STAT, 1)
			canhypertrain(1, VAR_0x8004)
		}
		elif (var(VAR_RESULT) == 2)
		{
			setvar(STAT, 2)
			canhypertrain(2, VAR_0x8004)
		}
		elif (var(VAR_RESULT) == 3)
		{
			setvar(STAT, 3)
			canhypertrain(3, VAR_0x8004)
		}
		elif (var(VAR_RESULT) == 4)
		{
			setvar(STAT, 4)
			canhypertrain(4, VAR_0x8004)
		}
		elif (var(VAR_RESULT) == 5)
		{
			setvar(STAT, 5)
			canhypertrain(5, VAR_0x8004)
		}
		else {
			goto(End)
		}
		sethypertrainstat(STAT)
		specialvar(0x8007, GetSelectedMonNicknameAndSpecies)
		if (var(VAR_RESULT) == FALSE) {
			msgbox(format("Your {STR_VAR_1}'s {STR_VAR_3} is already at it's maximum!"))
			goto(End)
		}
		switch (var(STAT))
		{
			case 0: // HP
				hypertrain(0, VAR_0x8004)
			case 1: // Attack
				hypertrain(1, VAR_0x8004)
			case 2: // Defense
				hypertrain(2, VAR_0x8004)
			case 3: // Special Attack
				hypertrain(3, VAR_0x8004)
			case 4: // Special Defense
				hypertrain(4, VAR_0x8004)
			case 5: // Speed
				hypertrain(5, VAR_0x8004)
		}
		playmoncry(0x8007, 0)
		waitmoncry
		msgbox(format("Your {STR_VAR_1}'s {STR_VAR_3} has been hyper trained."))
		removeitem(ITEM_BOTTLE_CAP, 1)
		goto(End)
	}
	elif (var(VAR_RESULT) == 0) { // Untrain
		checkitem(ITEM_GOLD_BOTTLE_CAP, 1)
		if (var(VAR_RESULT) != 1) { // No Gold Bottle Caps
			msgbox(format("You do not have any Gold Bottle Caps."))
			goto(End)
		}
		special(ChoosePartyMon)
		waitstate
		specialvar(VAR_RESULT, ScriptGetPartyMonSpecies)
		if (var(VAR_RESULT) == SPECIES_EGG) {
			msgbox(format("A Pok√©mon Egg cannot be Untrained."))
			goto(End)
		}
		msgbox(format("Which stat would you like to untrain?"))
		multichoicegrid(10, 4, MULTI_STAT_NAMES, 2, 0)
		if (var(VAR_RESULT) == 0)
		{
			setvar(STAT, 0)
			canuntrain(0, VAR_0x8004)
		}
		elif (var(VAR_RESULT) == 1)
		{
			setvar(STAT, 1)
			canuntrain(1, VAR_0x8004)
		}
		elif (var(VAR_RESULT) == 2)
		{
			setvar(STAT, 2)
			canuntrain(2, VAR_0x8004)
		}
		elif (var(VAR_RESULT) == 3)
		{
			setvar(STAT, 3)
			canuntrain(3, VAR_0x8004)
		}
		elif (var(VAR_RESULT) == 4)
		{
			setvar(STAT, 4)
			canuntrain(4, VAR_0x8004)
		}
		elif (var(VAR_RESULT) == 5)
		{
			setvar(STAT, 5)
			canuntrain(5, VAR_0x8004)
		}
		else {
			goto(End)
		}
		sethypertrainstat(STAT)
		specialvar(0x8007, GetSelectedMonNicknameAndSpecies)
		if (var(VAR_RESULT) == FALSE) {
			msgbox(format("Your {STR_VAR_1}'s {STR_VAR_3} is already at it's minimum!"))
			goto(End)
		}
		switch (var(STAT))
		{
			case 0: // HP
				untrain(0, VAR_0x8004)
			case 1: // Attack
				untrain(1, VAR_0x8004)
			case 2: // Defense
				untrain(2, VAR_0x8004)
			case 3: // Special Attack
				untrain(3, VAR_0x8004)
			case 4: // Special Defense
				untrain(4, VAR_0x8004)
			case 5: // Speed
				untrain(5, VAR_0x8004)
		}
		playmoncry(0x8007, 0)
		waitmoncry
		msgbox(format("Your {STR_VAR_1}'s {STR_VAR_3} has been untrained."))
		removeitem(ITEM_GOLD_BOTTLE_CAP, 1)
		goto(End)
	}
}

script EventScript_GameCorner_Clerk_TMs {
	lockall
	msgbox(format("I sell TMs in exchange for 2 Battle Points."))
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	if (var(VAR_TEMP_1) < 2) { // Not Enough BP
		msgbox(format("You don't have enough Battle Points. Come back with some more."))
		closemessage
		releaseall
		end
	}
	msgbox(format("Would you like to buy anything?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		closemessage
		releaseall
		end
	}
	closemessage
	special(ShowBattlePointsWindow)
	setvar(VAR_0x8004, SCROLL_MULTI_GAME_CORNER_TMS)
	special(ShowScrollableMultichoice)
	waitstate
	special(CloseBattlePointsWindow)
	switch (var(VAR_RESULT)) {
		case 0:
			call(TryBuyPsychicTM)
		case 1:
			call(TryBuyLeechLifeTM)
		case 2:
			call(TryBuyThunderboltTM)
		case 3:
			call(TryBuyIceBeamTM)		
		case 4:
			call(TryBuyShadowBallTM)
		case 5:
			call(TryBuyIceSpinnerTM)
		case 6:
			call(TryBuyEarthPowerTM)
		case 7:
			call(TryBuyFlashCannonTM)
		case 8:
			call(TryBuyDarkPulseTM)
	}
	releaseall
}

script TryBuyLeechLifeTM {
	checkitem(ITEM_TM_LEECH_LIFE)
	if (var(VAR_RESULT) == TRUE) {
		msgbox(format("You already own this TM."))
		goto(End)
	}
	msgbox(format("You would like to buy TM32 Leech Life?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_TM_LEECH_LIFE)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	setvar(VAR_0x8004, 2)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your TM! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyDarkPulseTM {
	checkitem(ITEM_TM_DARK_PULSE)
	if (var(VAR_RESULT) == TRUE) {
		msgbox(format("You already own this TM."))
		goto(End)
	}
	msgbox(format("You would like to buy TM100 Dark Pulse?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_TM_DARK_PULSE)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	setvar(VAR_0x8004, 2)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your TM! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyEarthPowerTM {
	checkitem(ITEM_TM_EARTH_POWER)
	if (var(VAR_RESULT) == TRUE) {
		msgbox(format("You already own this TM."))
		goto(End)
	}
	msgbox(format("You would like to buy TM41 Earth Power?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_TM_EARTH_POWER)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	setvar(VAR_0x8004, 2)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your TM! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyFlashCannonTM {
	checkitem(ITEM_TM_FLASH_CANNON)
	if (var(VAR_RESULT) == TRUE) {
		msgbox(format("You already own this TM."))
		goto(End)
	}
	msgbox(format("You would like to buy TM99 Flash Cannon?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_TM_FLASH_CANNON)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	setvar(VAR_0x8004, 2)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your TM! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyIceBeamTM {
	checkitem(ITEM_TM_ICE_BEAM)
	if (var(VAR_RESULT) == TRUE) {
		msgbox(format("You already own this TM."))
		goto(End)
	}
	msgbox(format("You would like to buy TM13 Ice Beam?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_TM_ICE_BEAM)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	setvar(VAR_0x8004, 2)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your TM! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyIceSpinnerTM {
	checkitem(ITEM_TM_ICE_SPINNER)
	if (var(VAR_RESULT) == TRUE) {
		msgbox(format("You already own this TM."))
		goto(End)
	}
	msgbox(format("You would like to buy TM70 Ice Spinner?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_TM_ICE_SPINNER)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	setvar(VAR_0x8004, 2)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your TM! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyPsychicTM {
	checkitem(ITEM_TM_PSYCHIC)
	if (var(VAR_RESULT) == TRUE) {
		msgbox(format("You already own this TM."))
		goto(End)
	}
	msgbox(format("You would like to buy TM29 Psychic?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_TM_PSYCHIC)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	setvar(VAR_0x8004, 2)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your TM! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyShadowBallTM {
	checkitem(ITEM_TM_SHADOW_BALL)
	if (var(VAR_RESULT) == TRUE) {
		msgbox(format("You already own this TM."))
		goto(End)
	}
	msgbox(format("You would like to buy TM30 Shadow Ball?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_TM_SHADOW_BALL)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	setvar(VAR_0x8004, 2)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your TM! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyThunderboltTM {
	checkitem(ITEM_TM_THUNDERBOLT)
	if (var(VAR_RESULT) == TRUE) {
		msgbox(format("You already own this TM."))
		goto(End)
	}
	msgbox(format("You would like to buy TM24 Thunderbolt?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_TM_THUNDERBOLT)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	setvar(VAR_0x8004, 2)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your TM! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script BPShopClerk {
	lockall
	msgbox(format("I sell certain items in exchange for Battle Points."))
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	if (var(VAR_TEMP_1) < 1) { // No BP
		msgbox(format("You don't have any Battle Points. Come back with some."))
		goto(End)
	}
	msgbox(format("Would you like to buy anything?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		goto(End)
	}
	special(ShowBattlePointsWindow) // Show the player's BP in a little window on the top left
	setvar(VAR_0x8004, SCROLL_MULTI_BF_EXCHANGE_CORNER_HOLD_ITEM_VENDOR) // Setting the shop items,
	// I just overwrote the items in SCROLL_MULTI_BF_EXCHANGE_CORNER_HOLD_ITEM_VENDOR in src/field_specials.c with my own text variables
	// you could also just change the used text variables in src/strings.c
	// note that you will need to edit src/data/battle_frontier/battle_frontier_exchange_corner.h for the correct items to be displayed
	// you can just not show/close it here if you don't wanna do that
	// and add to src/strings.c & include/strings.h for item descriptions, not sure where this text is used tho
	special(ShowFrontierExchangeCornerItemIconWindow) // Show the little item preview in the bottom left
	special(ShowScrollableMultichoice) // Show the multichoice, the chosen item index is set to VAR_RESULT
	waitstate
	special(CloseFrontierExchangeCornerItemIconWindow) // Close the item preview window when an item is chosen
	special(CloseBattlePointsWindow) // Close the BP window
	switch (var(VAR_RESULT)) {
		case 0:
			call(TryBuyToxicOrb)
		case 1:
			call(TryBuyFlameOrb)
		case 2:
			call(TryBuyFocusSash)
		case 3:
			call(TryBuyEjectPack)
		case 4:
			call(TryBuyBlankMint)
		case 5:
			call(TryBuyEjectButton)
		case 6:
			call(TryBuyBlackSludge)
		case 7:
			call(TryBuyLeftovers)
		case 8:
			call(TryBuyAssaultVest)
		case 9:
			call(TryBuyEviolite)
		case 10:
			call(TryBuyAbilityPatch)
		case 11:
			call(TryBuyGoldBottleCap)
		case 12:
			call(TryBuyLifeOrb)
		case 13:
			call(TryBuyBottleCap)
		case 14:
			call(TryBuyRareCandy)
		case 15:
			call(TryBuyTM01Covet)
		case 16:
			call(TryBuyTM46Thief)
	}
	goto(End)
}

script TryBuyEviolite {
	msgbox(format("You would like to buy an Eviolite?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	// * There doesn't seem to be a need to set 8008 to the price,
	// just compare to the value instead of a var in 1*
	// and set 8004 directly to the value instead of a var in 2*
	//setvar(VAR_0x8008, 4) // Price | *
	setvar(VAR_0x8009, ITEM_EVIOLITE) // Item to give the player
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints) // Get the player's BP
	if (var(VAR_TEMP_1) < 4) { // If not enough BP | 1*
		msgbox(format("You don't have enough Battle Points."))
		goto(End)
	}
	checkitemspace(VAR_0x8009) // Check if the player has enough bag space for the item
	if (var(VAR_RESULT) == FALSE) { // ^ if not
		msgbox(format("You don't have bag space for this item."))
		goto(End)
	}
	//copyvar(VAR_0x8004, VAR_0x8008) // Set 8004 to 8008 | 2*
	setvar(VAR_0x8004, 4) // ^
	special(TakeFrontierBattlePoints) // Take the amount of BP in 8004
	playse(SE_SHOP)
	additem(VAR_0x8009) // Give the player the item
	msgbox(format("Here is your Eviolite! Thank you very much."))
	special(UpdateBattlePointsWindow) // Update the window to show the purchase
}

script TryBuyRareCandy {
	msgbox(format("You would like to buy a Rare Candy?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_RARE_CANDY)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	if (var(VAR_TEMP_1) < 8) {
		msgbox(format("You don't have enough Battle Points."))
		goto(End)
	}
	checkitemspace(VAR_0x8009)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("You don't have bag space for this item."))
		goto(End)
	}
	setvar(VAR_0x8004, 8)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your Rare Candy! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyToxicOrb {
	msgbox(format("You would like to buy a Toxic Orb?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_TOXIC_ORB)
	checkitemspace(VAR_0x8009)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("You don't have bag space for this item."))
		goto(End)
	}
	setvar(VAR_0x8004, 1)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your Toxic Orb! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyFlameOrb {
	msgbox(format("You would like to buy a Flame Orb?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_FLAME_ORB)
	checkitemspace(VAR_0x8009)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("You don't have bag space for this item."))
		goto(End)
	}
	setvar(VAR_0x8004, 1)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your Flame Orb! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyFocusSash {
	msgbox(format("You would like to buy a Focus Sash?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_FOCUS_SASH)
	checkitemspace(VAR_0x8009)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("You don't have bag space for this item."))
		goto(End)
	}
	setvar(VAR_0x8004, 1)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your Focus Sash! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyEjectPack {
	msgbox(format("You would like to buy an Eject Pack?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_EJECT_PACK)
	checkitemspace(VAR_0x8009)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("You don't have bag space for this item."))
		goto(End)
	}
	setvar(VAR_0x8004, 1)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your Eject Pack! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyBlankMint {
	msgbox(format("You would like to buy a Blank Nature Mint?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_BLANK_MINT)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	if (var(VAR_TEMP_1) < 2) {
		msgbox(format("You don't have enough Battle Points."))
		goto(End)
	}
	checkitemspace(VAR_0x8009)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("You don't have bag space for this item."))
		goto(End)
	}
	setvar(VAR_0x8004, 2)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your Blank Nautre Mint! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyEjectButton {
	msgbox(format("You would like to buy an Eject Button?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_EJECT_BUTTON)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	if (var(VAR_TEMP_1) < 2) {
		msgbox(format("You don't have enough Battle Points."))
		goto(End)
	}
	checkitemspace(VAR_0x8009)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("You don't have bag space for this item."))
		goto(End)
	}
	setvar(VAR_0x8004, 2)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your Eject Button! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyBlackSludge {
	msgbox(format("You would like to buy a Black Sludge?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_BLACK_SLUDGE)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	if (var(VAR_TEMP_1) < 2) {
		msgbox(format("You don't have enough Battle Points."))
		goto(End)
	}
	checkitemspace(VAR_0x8009)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("You don't have bag space for this item."))
		goto(End)
	}
	setvar(VAR_0x8004, 2)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your Black Sludge! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyLeftovers {
	msgbox(format("You would like to buy some Leftovers?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_LEFTOVERS)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	if (var(VAR_TEMP_1) < 2) {
		msgbox(format("You don't have enough Battle Points."))
		goto(End)
	}
	checkitemspace(VAR_0x8009)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("You don't have bag space for this item."))
		goto(End)
	}
	setvar(VAR_0x8004, 2)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here are your Leftovers! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyAssaultVest {
	msgbox(format("You would like to buy an Assault Vest?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_ASSAULT_VEST)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	if (var(VAR_TEMP_1) < 2) {
		msgbox(format("You don't have enough Battle Points."))
		goto(End)
	}
	checkitemspace(VAR_0x8009)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("You don't have bag space for this item."))
		goto(End)
	}
	setvar(VAR_0x8004, 2)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your Assault Vest! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyAbilityPatch {
	msgbox(format("You would like to buy an Ability Patch?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_ABILITY_PATCH)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	if (var(VAR_TEMP_1) < 4) {
		msgbox(format("You don't have enough Battle Points."))
		goto(End)
	}
	checkitemspace(VAR_0x8009)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("You don't have bag space for this item."))
		goto(End)
	}
	setvar(VAR_0x8004, 4)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your Ability Patch! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyGoldBottleCap {
	msgbox(format("You would like to buy a Gold Bottle Cap?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_GOLD_BOTTLE_CAP)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	if (var(VAR_TEMP_1) < 4) {
		msgbox(format("You don't have enough Battle Points."))
		goto(End)
	}
	checkitemspace(VAR_0x8009)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("You don't have bag space for this item."))
		goto(End)
	}
	setvar(VAR_0x8004, 4)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your Gold Bottle Cap! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyLifeOrb {
	msgbox(format("You would like to buy a Life Orb?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_LIFE_ORB)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	if (var(VAR_TEMP_1) < 6) {
		msgbox(format("You don't have enough Battle Points."))
		goto(End)
	}
	checkitemspace(VAR_0x8009)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("You don't have bag space for this item."))
		goto(End)
	}
	setvar(VAR_0x8004, 6)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your Life Orb! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyBottleCap {
	msgbox(format("You would like to buy a Bottle Cap?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_BOTTLE_CAP)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	if (var(VAR_TEMP_1) < 8) {
		msgbox(format("You don't have enough Battle Points."))
		goto(End)
	}
	checkitemspace(VAR_0x8009)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("You don't have bag space for this item."))
		goto(End)
	}
	setvar(VAR_0x8004, 8)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your Bottle Cap! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyTM01Covet {
	checkitem(ITEM_TM_COVET)
	if (var(VAR_RESULT) == TRUE) {
		msgbox(format("You already own this TM."))
		goto(End)
	}
	msgbox(format("You would like to buy TM01 Covet?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_TM_COVET)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	if (var(VAR_TEMP_1) < 10) {
		msgbox(format("You don't have enough Battle Points."))
		goto(End)
	}
	checkitemspace(VAR_0x8009)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("You don't have bag space for this TM."))
		goto(End)
	}
	setvar(VAR_0x8004, 10)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your TM! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script TryBuyTM46Thief {
	checkitem(ITEM_TM_THIEF)
	if (var(VAR_RESULT) == TRUE) {
		msgbox(format("You already own this TM."))
		goto(End)
	}
	msgbox(format("You would like to buy TM46 Thief?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		goto(End)
	}
	setvar(VAR_0x8009, ITEM_TM_THIEF)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	if (var(VAR_TEMP_1) < 10) {
		msgbox(format("You don't have enough Battle Points."))
		goto(End)
	}
	checkitemspace(VAR_0x8009)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("You don't have bag space for this TM."))
		goto(End)
	}
	setvar(VAR_0x8004, 10)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	additem(VAR_0x8009)
	msgbox(format("Here is your TM! Thank you very much."))
	special(UpdateBattlePointsWindow)
}

script EggMoveTutor {
	msgbox(format("I can teach one of your Pok√©mon one of their egg moves in exchange for one Battle Point."))
	special(ShowBattlePointsWindow)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	if (var(VAR_TEMP_1) < 1) { // No BP
		msgbox(format("You don't have any Battle Points. Come back with some if you want me to teach an egg move to one of your Pok√©mon."))
		special(CloseBattlePointsWindow)
		goto(End)
	}
	msgbox(format("Would you like to do that?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		special(CloseBattlePointsWindow)
		goto(End)
	}
	special(ChooseMonForMoveRelearner)
	waitstate
	if (var(VAR_0x8004) == PARTY_NOTHING_CHOSEN) { // Pressed 'B' in selection screen
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		special(CloseBattlePointsWindow)
		goto(End)
	}
	special(IsSelectedMonEgg)
	if (var(VAR_RESULT) == TRUE) {
		msgbox(format("I can't teach a move to an Egg."))
		special(CloseBattlePointsWindow)
		goto(End)
	}
	special(DoesChosenMonHaveEggMoves)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("This Pok√©mon does not have any egg moves."))
		special(CloseBattlePointsWindow)
		goto(End)
	}
	specialvar(0x8007, GetSelectedMonNicknameAndSpecies)
	msgbox(format("Which move would you like me to teach {STR_VAR_1}?"))
	special(TeachEggMove)
	waitstate
	if (var(VAR_0x8004) == FALSE) {
		msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
		special(CloseBattlePointsWindow)
		goto(End)
	}
	setvar(VAR_0x8004, 1)
	special(TakeFrontierBattlePoints)
	special(CloseBattlePointsWindow)
	playse(SE_SHOP)
	goto(End)
}

script EventScript_FishermanSalesman {
	lockall
	msgbox(format("I am the master fisherman. I have travelled all throughout Hoenn and caught every type of fish there is."))
	checkmoney(500)
	if (var(VAR_RESULT) == FALSE) { // Player has < 500
	msgbox(format("You don't have enough money to buy any fish. Come back later with more money."))
		goto(End)
	}
	msgbox(format("Would you like to buy one?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(format("I'll be here if you change your mind."))
		goto(End)
	}
	setvar(VAR_0x8004, SCROLL_MULTI_FISH)
	showmoneyboxfish(0, 0)
	special(ShowScrollableMultichoice)
	waitstate
	switch (var(VAR_RESULT))
	{
		case 0: // Magikarp
			call(TryBuyMagikarp)
		case 1: // Goldeen
			call(TryBuyGoldeen)
		case 2: // Remoraid
			call(TryBuyRemoraid)
		case 3: // Feebas
			call(TryBuyFeebas)
		case 4: // Finneon
			call(TryBuyFinneon)
		case 5: // Tynamo
			call(TryBuyTynamo)
		case 6: // Arrokuda
			call(TryBuyArrokuda)
		case 7: // Barboach
			call(TryBuyBarboach)
		case 8: // Chinchou
			call(TryBuyChinchou)
		case 9: // Carvanha
			call(TryBuyCarvanha)
		case 10: // Qwilfish
			call(TryBuyQwilfish)
		case 11: // Basculin
			call(TryBuyBasculin)
		case 12: // Cosmog
			call(TryBuyCosmog)
		default:
			hidemoneybox
			goto(End)
	}
	goto(End)
}

script TryBuyMagikarp {
	msgbox(format("You would like to buy Magikarp for ¬•500?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(format("I'll be here if you change your mind."))
		hidemoneybox
		goto(End)
	}
	removemoney(500)
	updatemoneyboxfish
	givemon(SPECIES_MAGIKARP, 5, ITEM_NONE, ITEM_LURE_BALL)
	setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_MAGIKARP)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Magikarp."))
		hidemoneybox
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Magikarp."))
		hidemoneybox
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room in your boxes for a new Pok√©mon."))
		hidemoneybox
		goto(End)
	}
}

script TryBuyGoldeen {
	msgbox(format("You would like to buy Goldeen for ¬•500?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(format("I'll be here if you change your mind."))
		hidemoneybox
		goto(End)
	}
	removemoney(500)
	updatemoneyboxfish
	givemon(SPECIES_GOLDEEN, 5, ITEM_NONE, ITEM_LURE_BALL)
	setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_GOLDEEN)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Goldeen."))
		hidemoneybox
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Goldeen."))
		hidemoneybox
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room in your boxes for a new Pok√©mon."))
		hidemoneybox
		goto(End)
	}
}

script TryBuyRemoraid {
	msgbox(format("You would like to buy Remoraid for ¬•500?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(format("I'll be here if you change your mind."))
		hidemoneybox
		goto(End)
	}
	removemoney(500)
	updatemoneyboxfish
	givemon(SPECIES_REMORAID, 5, ITEM_NONE, ITEM_LURE_BALL)
	setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_REMORAID)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Remoraid."))
		hidemoneybox
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Remoraid."))
		hidemoneybox
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room in your boxes for a new Pok√©mon."))
		hidemoneybox
		goto(End)
	}
}

script TryBuyFeebas {
	checkmoney(1000)
	if (var(VAR_RESULT) == FALSE) { // Player has < 1000
		msgbox(format("You don't have enough money to buy Feebas. Come back later with more money."))
		hidemoneybox
		goto(End)
	}
	msgbox(format("You would like to buy Feebas for ¬•1000?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(format("I'll be here if you change your mind."))
		hidemoneybox
		goto(End)
	}
	removemoney(1000)
	updatemoneyboxfish
	givemon(SPECIES_FEEBAS, 5, ITEM_NONE, ITEM_LURE_BALL)
	setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_FEEBAS)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Feebas."))
		hidemoneybox
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Feebas."))
		hidemoneybox
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room in your boxes for a new Pok√©mon."))
		hidemoneybox
		goto(End)
	}
}

script TryBuyFinneon {
	checkmoney(1000)
	if (var(VAR_RESULT) == FALSE) { // Player has < 1000
		msgbox(format("You don't have enough money to buy Finneon. Come back later with more money."))
		hidemoneybox
		goto(End)
	}
	msgbox(format("You would like to buy Finneon for ¬•1000?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(format("I'll be here if you change your mind."))
		hidemoneybox
		goto(End)
	}
	removemoney(1000)
	updatemoneyboxfish
	givemon(SPECIES_FINNEON, 5, ITEM_NONE, ITEM_LURE_BALL)
	setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_FINNEON)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Finneon."))
		hidemoneybox
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Finneon."))
		hidemoneybox
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room in your boxes for a new Pok√©mon."))
		hidemoneybox
		goto(End)
	}
}

script TryBuyTynamo {
	checkmoney(1000)
	if (var(VAR_RESULT) == FALSE) { // Player has < 1000
		msgbox(format("You don't have enough money to buy Tynamo. Come back later with more money."))
		hidemoneybox
		goto(End)
	}
	msgbox(format("You would like to buy Tynamo for ¬•1000?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(format("I'll be here if you change your mind."))
		hidemoneybox
		goto(End)
	}
	removemoney(1000)
	updatemoneyboxfish
	givemon(SPECIES_TYNAMO, 5, ITEM_NONE, ITEM_LURE_BALL)
	setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_TYNAMO)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Tynamo."))
		hidemoneybox
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Tynamo."))
		hidemoneybox
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room in your boxes for a new Pok√©mon."))
		hidemoneybox
		goto(End)
	}
}

script TryBuyArrokuda {
	checkmoney(1000)
	if (var(VAR_RESULT) == FALSE) { // Player has < 1000
		msgbox(format("You don't have enough money to buy Arrokuda. Come back later with more money."))
		hidemoneybox
		goto(End)
	}
	msgbox(format("You would like to buy Arrokuda for ¬•1000?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(format("I'll be here if you change your mind."))
		hidemoneybox
		goto(End)
	}
	removemoney(1000)
	updatemoneyboxfish
	givemon(SPECIES_ARROKUDA, 5, ITEM_NONE, ITEM_LURE_BALL)
	setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_ARROKUDA)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Arrokuda."))
		hidemoneybox
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Arrokuda."))
		hidemoneybox
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room in your boxes for a new Pok√©mon."))
		hidemoneybox
		goto(End)
	}
}

script TryBuyBarboach {
	checkmoney(1000)
	if (var(VAR_RESULT) == FALSE) { // Player has < 1000
		msgbox(format("You don't have enough money to buy Barboach. Come back later with more money."))
		hidemoneybox
		goto(End)
	}
	msgbox(format("You would like to buy Barboach for ¬•1000?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(format("I'll be here if you change your mind."))
		hidemoneybox
		goto(End)
	}
	removemoney(1000)
	updatemoneyboxfish
	givemon(SPECIES_BARBOACH, 5, ITEM_NONE, ITEM_LURE_BALL)
	setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_BARBOACH)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Barboach."))
		hidemoneybox
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Barboach."))
		hidemoneybox
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room in your boxes for a new Pok√©mon."))
		hidemoneybox
		goto(End)
	}
}

script TryBuyChinchou {
	checkmoney(5000)
	if (var(VAR_RESULT) == FALSE) { // Player has < 5000
		msgbox(format("You don't have enough money to buy Chinchou. Come back later with more money."))
		hidemoneybox
		goto(End)
	}
	msgbox(format("You would like to buy Chinchou for ¬•5000?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(format("I'll be here if you change your mind."))
		hidemoneybox
		goto(End)
	}
	removemoney(5000)
	updatemoneyboxfish
	givemon(SPECIES_CHINCHOU, 5, ITEM_NONE, ITEM_LURE_BALL)
	setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_CHINCHOU)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Chinchou."))
		hidemoneybox
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Chinchou."))
		hidemoneybox
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room in your boxes for a new Pok√©mon."))
		hidemoneybox
		goto(End)
	}
}

script TryBuyCarvanha {
	checkmoney(5000)
	if (var(VAR_RESULT) == FALSE) { // Player has < 5000
		msgbox(format("You don't have enough money to buy Carvanha. Come back later with more money."))
		hidemoneybox
		goto(End)
	}
	msgbox(format("You would like to buy Carvanha for ¬•5000?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(format("I'll be here if you change your mind."))
		hidemoneybox
		goto(End)
	}
	removemoney(5000)
	updatemoneyboxfish
	givemon(SPECIES_CARVANHA, 5, ITEM_NONE, ITEM_LURE_BALL)
	setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_CARVANHA)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Carvanha."))
		hidemoneybox
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Carvanha."))
		hidemoneybox
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room in your boxes for a new Pok√©mon."))
		hidemoneybox
		goto(End)
	}
}

script TryBuyQwilfish {
	checkmoney(10000)
	if (var(VAR_RESULT) == FALSE) { // Player has < 10000
		msgbox(format("You don't have enough money to buy Qwilfish. Come back later with more money."))
		hidemoneybox
		goto(End)
	}
	msgbox(format("You would like to buy Qwilfish for ¬•10000?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(format("I'll be here if you change your mind."))
		hidemoneybox
		goto(End)
	}
	removemoney(10000)
	updatemoneyboxfish
	givemon(SPECIES_QWILFISH_HISUI, 5, ITEM_NONE, ITEM_LURE_BALL)
	setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_QWILFISH_HISUI)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Qwilfish."))
		hidemoneybox
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Qwilfish."))
		hidemoneybox
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room in your boxes for a new Pok√©mon."))
		hidemoneybox
		goto(End)
	}
}

script TryBuyBasculin {
	checkmoney(10000)
	if (var(VAR_RESULT) == FALSE) { // Player has < 10000
		msgbox(format("You don't have enough money to buy Basculin. Come back later with more money."))
		hidemoneybox
		goto(End)
	}
	msgbox(format("You would like to buy Basculin for ¬•10000?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(format("I'll be here if you change your mind."))
		hidemoneybox
		goto(End)
	}
	removemoney(10000)
	updatemoneyboxfish
	givemon(SPECIES_BASCULIN_WHITE_STRIPED, 5, ITEM_NONE, ITEM_LURE_BALL)
	setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_BASCULIN_WHITE_STRIPED)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Basculin."))
		hidemoneybox
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Basculin."))
		hidemoneybox
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room in your boxes for a new Pok√©mon."))
		hidemoneybox
		goto(End)
	}
}

script TryBuyCosmog {
	checkmoney(50000)
	if (var(VAR_RESULT) == FALSE) { // Player has < 50000
		msgbox(format("You don't have enough money to buy Cosmog. Come back later with more money."))
		hidemoneybox
		goto(End)
	}
	msgbox(format("You would like to buy Cosmog for ¬•50000?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(format("I'll be here if you change your mind."))
		hidemoneybox
		goto(End)
	}
	removemoney(50000)
	updatemoneyboxfish
	givemon(SPECIES_COSMOG, 5, ITEM_NONE, ITEM_LURE_BALL)
	setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_COSMOG)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Cosmog."))
		hidemoneybox
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Cosmog."))
		hidemoneybox
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room in your boxes for a new Pok√©mon."))
		hidemoneybox
		goto(End)
	}
}

script NicknamePartyMon {
	msgbox(format("Do you want to give it a nickame?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 1) { // Yes
		call(Common_EventScript_GetGiftMonPartySlot)
		call(Common_EventScript_NameReceivedPartyMon)
	}
	goto(End)
}

script NicknameBoxMon {
	msgbox(format("Do you want to give it a nickame?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 1) { // Yes
		call(Common_EventScript_NameReceivedBoxMon)
	}
	bufferspeciesname(STR_VAR_2, VAR_TEMP_TRANSFERRED_SPECIES)
	call(Common_EventScript_TransferredToPC)
	goto(End)
}

script End {
	setvar(VAR_0x800B, 1)
	waitmessage
	releaseall
}

script OldaleSecondaryMart_Clerk {
	lock
	message(gText_HowMayIServeYou)
	waitmessage
	pokemart(OldaleSecondaryMart)
	msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
	release
}

script PetalburgSecondaryMart_Clerk {
	lock
	message(gText_HowMayIServeYou)
	waitmessage
	pokemart(PetalburgSecondaryMart)
	msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
	release
}

script RustboroSecondaryMart_Clerk {
	lock
	message(gText_HowMayIServeYou)
	waitmessage
	pokemart(RustboroSecondaryMart)
	msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
	release
}

script SlateportSecondaryMart_Clerk {
	lock
	message(gText_HowMayIServeYou)
	waitmessage
	pokemart(SlateportSecondaryMart)
	msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
	release
}

script MauvilleSecondaryMart_Clerk {
	lock
	message(gText_HowMayIServeYou)
	waitmessage
	pokemart(MauvilleSecondaryMart)
	msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
	release
}

script VerdanturfSecondaryMart_Clerk {
	lock
	message(gText_HowMayIServeYou)
	waitmessage
	pokemart(VerdanturfSecondaryMart)
	msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
	release
}

script FallarborSecondaryMart_Clerk {
	lock
	message(gText_HowMayIServeYou)
	waitmessage
	pokemart(FallarborSecondaryMart)
	msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
	release
}

script LavaridgeSecondaryMart_Clerk {
	lock
	message(gText_HowMayIServeYou)
	waitmessage
	pokemart(LavaridgeSecondaryMart)
	msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
	release
}

script FortreeSecondaryMart_Clerk {
	lock
	message(gText_HowMayIServeYou)
	waitmessage
	pokemart(FortreeSecondaryMart)
	msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
	release
}

script MossdeepSecondaryMart_Clerk {
	lock
	message(gText_HowMayIServeYou)
	waitmessage
	pokemart(MossdeepSecondaryMart)
	msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
	release
}

script SootopolisSecondaryMart_Clerk {
	lock
	message(gText_HowMayIServeYou)
	waitmessage
	pokemart(SootopolisSecondaryMart)
	msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
	release
}

script RandomEggGuy {
	lock
	faceplayer
	message(format("Hello there, I have some Pok√©mon Eggs I can sell to you. They can contain any fully unevolved Pok√©mon. They'll cost 10 BP each."))
	waitmessage
	goto_if_unset(FLAG_EGGGUY_FISRTEGG, FreeRandomEgg)
	special(ShowBattlePointsWindow)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	if (var(VAR_TEMP_1) < 10) { // Not enough BP
		msgbox(format("You don't have enough BP. Come back with 10 BP to buy a random egg."))
		special(CloseBattlePointsWindow)
		goto(End)
	}
	msgbox(format("Would you like to buy one?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(format("I'll be here if you change your mind."))
		special(CloseBattlePointsWindow)
		goto(End)
	}
	setvar(VAR_0x8004, 10)
	special(TakeFrontierBattlePoints)
	special(CloseBattlePointsWindow)
	goto(GiveRandomEgg)
}

script FreeRandomEgg {
	delay(20)
	message(format("But, since you're a new customer, the first one is free!"))
	waitmessage
	setflag(FLAG_EGGGUY_FISRTEGG)
	goto(GiveRandomEgg)
}

script GiveRandomEgg {
	delay(20)
	special(GetRandomEgg)
	giveegg(VAR_RESULT)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained the Egg!"))
		goto(End)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("The egg was placed in your PC."))
		goto(End)
	}
	else {
		msgbox(format("You don't have any room in your boxes for a new Pok√©mon."))
		goto(End)
	}
	goto(End)
}

script Static_Tangela_DeepWoods {
	lock
	setwildbattle(SPECIES_TANGELA, 25)
	waitse
	playmoncry(SPECIES_TANGELA, CRY_MODE_ENCOUNTER)
	delay(40)
	waitmoncry
	dowildbattle
	specialvar(VAR_RESULT, GetBattleOutcome)
	switch(var(VAR_RESULT)) {
		case B_OUTCOME_PLAYER_TELEPORTED:
		case B_OUTCOME_RAN:
		case B_OUTCOME_WON:
			setflag(FLAG_STATIC_TANGELA)
			goto(Common_EventScript_RemoveStaticPokemon)
	}
	setflag(FLAG_STATIC_TANGELA)
	release
}

script Static_Foongus1_DeepWoods {
	lock
	setwildbattle(SPECIES_FOONGUS, 15)
	waitse
	playmoncry(SPECIES_FOONGUS, CRY_MODE_ENCOUNTER)
	delay(40)
	waitmoncry
	dowildbattle
	setflag(FLAG_STATIC_FOONGUS1)
	goto(Common_EventScript_RemoveStaticPokemon)
	setflag(FLAG_STATIC_FOONGUS1)
	release
}

script Static_Foongus2_DeepWoods {
	lock
	setwildbattle(SPECIES_FOONGUS, 15)
	waitse
	playmoncry(SPECIES_FOONGUS, CRY_MODE_ENCOUNTER)
	delay(40)
	waitmoncry
	dowildbattle
	setflag(FLAG_STATIC_FOONGUS2)
	goto(Common_EventScript_RemoveStaticPokemon)
	setflag(FLAG_STATIC_FOONGUS2)
	release
}

script Static_Morelull1_DeepWoods {
	lock
	setwildbattle(SPECIES_MORELULL, 15)
	waitse
	playmoncry(SPECIES_MORELULL, CRY_MODE_ENCOUNTER)
	delay(40)
	waitmoncry
	dowildbattle
	setflag(FLAG_STATIC_MORELULL1)
	goto(Common_EventScript_RemoveStaticPokemon)
	setflag(FLAG_STATIC_MORELULL1)
	release
}

script Static_Morelull2_DeepWoods {
	lock
	setwildbattle(SPECIES_MORELULL, 15)
	waitse
	playmoncry(SPECIES_MORELULL, CRY_MODE_ENCOUNTER)
	delay(40)
	waitmoncry
	dowildbattle
	setflag(FLAG_STATIC_MORELULL2)
	goto(Common_EventScript_RemoveStaticPokemon)
	setflag(FLAG_STATIC_MORELULL2)
	release
}

script ChoiceItemsGuy {
	lock
	faceplayer
	msgbox(format("Welcome and congratulations for making it to the Pok√©mon League! I'm here to hand out useful items to trainers in case they don't have them yet. Let's see here..."))
	checkitem(ITEM_CHOICE_SCARF)
	if (var(VAR_RESULT) == FALSE) {
		checkpcitem(ITEM_CHOICE_SCARF)
		if (var(VAR_RESULT) == FALSE) {
			checkpartychoicescarf
			if (var(VAR_RESULT) == FALSE) {
			    msgbox(format("Since you don't yet have a Choice Scarf, I will give you one. Here you go."))
			    checkitemspace(VAR_0x8009)
			    if (var(VAR_RESULT) == FALSE) {
			    	msgbox(format("You don't have bag space for any more items."))
			    	goto(End)
			    }
			    giveitem(ITEM_CHOICE_SCARF)
			}
		}
	}
	checkitem(ITEM_CHOICE_SPECS)
	if (var(VAR_RESULT) == FALSE) {
		checkpcitem(ITEM_CHOICE_SPECS)
		if (var(VAR_RESULT) == FALSE) {
			checkpartychoicespecs
			if (var(VAR_RESULT) == FALSE) {
		    	msgbox(format("Since you don't yet have a Choice Specs, I will give you one. Here you go."))
		    	checkitemspace(VAR_0x8009)
		    	if (var(VAR_RESULT) == FALSE) {
		    		msgbox(format("You don't have bag space for any more items."))
		    		goto(End)
		    	}
		    	giveitem(ITEM_CHOICE_SPECS)
			}
		}
	}
	checkitem(ITEM_CHOICE_BAND)
	if (var(VAR_RESULT) == FALSE) {
		checkpcitem(ITEM_CHOICE_BAND)
		if (var(VAR_RESULT) == FALSE) {
			checkpartychoiceband
			if (var(VAR_RESULT) == FALSE) {
				msgbox(format("Since you don't yet have a Choice Band, I will give you one. Here you go."))
				checkitemspace(VAR_0x8009)
				if (var(VAR_RESULT) == FALSE) {
					msgbox(format("You don't have bag space for any more items."))
					goto(End)
				}
				giveitem(ITEM_CHOICE_BAND)
			}
		}
	}
	msgbox(format("Look at that! You have all of the choice items, you should be good to go."))
	msgbox(format("Good luck taking on the Pok√©mon League!"))
	closemessage
	release
}

script WeatherInstituteGift {
	msgbox(Route119_WeatherInstitute_2F_Text_ThanksPleaseTakePokemon, MSGBOX_DEFAULT)
	random(4)
	switch (var(VAR_RESULT)) {
		case 0:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_LARVITAR)
			givemon(SPECIES_LARVITAR, 25, ITEM_HARD_STONE, abilityNum=3)
			if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
	        	playfanfare(MUS_OBTAIN_ITEM)
	        	msgbox(format("Obtained Larvitar."))
	        	call(NicknamePartyMon)
	        }        
            elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
	        	playfanfare(MUS_OBTAIN_ITEM)
	        	msgbox(format("Obtained Larvitar."))
	        	call(NicknameBoxMon)
	        }        
	        else {
	        	msgbox(format("You don't have any room in your boxes for a new Pok√©mon."))
	        	goto(End)
	        }
		case 1:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_WAILMER)
			givemon(SPECIES_WAILMER, 25, ITEM_MYSTIC_WATER, abilityNum=3)
			if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
	        	playfanfare(MUS_OBTAIN_ITEM)
	        	msgbox(format("Obtained Wailmer."))
	        	call(NicknamePartyMon)
	        }        
            elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
	        	playfanfare(MUS_OBTAIN_ITEM)
	        	msgbox(format("Obtained Wailmer."))
	        	call(NicknameBoxMon)
	        }        
	        else {
	        	msgbox(format("You don't have any room in your boxes for a new Pok√©mon."))
	        	goto(End)
	        }        
		case 2:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_VULPIX)
			givemon(SPECIES_VULPIX, 25, ITEM_CHARCOAL, abilityNum=3)
			if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
	        	playfanfare(MUS_OBTAIN_ITEM)
	        	msgbox(format("Obtained Vulpix."))
	        	call(NicknamePartyMon)
	        }        
            elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
	        	playfanfare(MUS_OBTAIN_ITEM)
	        	msgbox(format("Obtained Vulpix."))
	        	call(NicknameBoxMon)
	        }        
	        else {
	        	msgbox(format("You don't have any room in your boxes for a new Pok√©mon."))
	        	goto(End)
	        }
		case 3:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_SNOVER)
			givemon(SPECIES_SNOVER, 25, ITEM_NEVER_MELT_ICE, abilityNum=1)
			if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
	        	playfanfare(MUS_OBTAIN_ITEM)
	        	msgbox(format("Obtained Snover."))
	        	call(NicknamePartyMon)
	        }        
            elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
	        	playfanfare(MUS_OBTAIN_ITEM)
	        	msgbox(format("Obtained Snover."))
	        	call(NicknameBoxMon)
	        }        
	        else {
	        	msgbox(format("You don't have any room in your boxes for a new Pok√©mon."))
	        	goto(End)
	        }
	}
	msgbox(Route119_WeatherInstitute_2F_Text_PokemonChangesWithWeather, MSGBOX_DEFAULT)
	goto(End)
}

script FossilScientist {
	lock
	msgbox(RustboroCity_DevonCorp_2F_Text_DevelopDeviceToResurrectFossils, MSGBOX_DEFAULT)
	checkitem(ITEM_HELIX_FOSSIL)
	goto_if_eq(VAR_RESULT, TRUE, ReviveFossil)
	checkitem(ITEM_DOME_FOSSIL)
	goto_if_eq(VAR_RESULT, TRUE, ReviveFossil)
	checkitem(ITEM_SKULL_FOSSIL)
	goto_if_eq(VAR_RESULT, TRUE, ReviveFossil)
	checkitem(ITEM_ARMOR_FOSSIL)
	goto_if_eq(VAR_RESULT, TRUE, ReviveFossil)
	checkitem(ITEM_PLUME_FOSSIL)
	goto_if_eq(VAR_RESULT, TRUE, ReviveFossil)
	checkitem(ITEM_COVER_FOSSIL)
	goto_if_eq(VAR_RESULT, TRUE, ReviveFossil)
	checkitem(ITEM_CLAW_FOSSIL)
	goto_if_eq(VAR_RESULT, TRUE, ReviveFossil)
	checkitem(ITEM_ROOT_FOSSIL)
	goto_if_eq(VAR_RESULT, TRUE, ReviveFossil)
	checkitem(ITEM_SAIL_FOSSIL)
	goto_if_eq(VAR_RESULT, TRUE, ReviveFossil)
	checkitem(ITEM_JAW_FOSSIL)
	goto_if_eq(VAR_RESULT, TRUE, ReviveFossil)
	msgbox(format("If you bring me a fossil, I can revive it for you!"))
	closemessage
	release
}

script ReviveFossil {
	lock
	msgbox(format("Oh! You have a fossil! Would you like me to revive it?"), MSGBOX_YESNO)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("Aw...okay. Well come back if you change your mind."))
		closemessage
		release
		end
	}
	msgbox(format("Please give me the fossil you want to revive."))
	special(Bag_ChooseFossil)
	waitstate
	switch (var(VAR_ITEM_ID)) {
		case ITEM_HELIX_FOSSIL:
			givemon(SPECIES_OMANYTE, 5)
			bufferspeciesname(STR_VAR_2, SPECIES_OMANYTE)
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_OMANYTE)
		case ITEM_DOME_FOSSIL:
			givemon(SPECIES_KABUTO, 5)
			bufferspeciesname(STR_VAR_2, SPECIES_KABUTO)
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_KABUTO)
		case ITEM_ROOT_FOSSIL:
			givemon(SPECIES_LILEEP, 5)
			bufferspeciesname(STR_VAR_2, SPECIES_LILEEP)
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_LILEEP)
		case ITEM_CLAW_FOSSIL:
			givemon(SPECIES_ANORITH, 5)
			bufferspeciesname(STR_VAR_2, SPECIES_ANORITH)
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_ANORITH)
		case ITEM_SKULL_FOSSIL:
			givemon(SPECIES_CRANIDOS, 5)
			bufferspeciesname(STR_VAR_2, SPECIES_CRANIDOS)
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_CRANIDOS)
		case ITEM_ARMOR_FOSSIL:
			givemon(SPECIES_SHIELDON, 5)
			bufferspeciesname(STR_VAR_2, SPECIES_SHIELDON)
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_SHIELDON)
		case ITEM_PLUME_FOSSIL:
			givemon(SPECIES_ARCHEN, 5)
			bufferspeciesname(STR_VAR_2, SPECIES_ARCHEN)
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_ARCHEN)
		case ITEM_COVER_FOSSIL:
			givemon(SPECIES_TIRTOUGA, 5)
			bufferspeciesname(STR_VAR_2, SPECIES_TIRTOUGA)
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_TIRTOUGA)
		case ITEM_SAIL_FOSSIL:
			givemon(SPECIES_AMAURA, 5)
			bufferspeciesname(STR_VAR_2, SPECIES_AMAURA)
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_AMAURA)
		case ITEM_JAW_FOSSIL:
			givemon(SPECIES_TYRUNT, 5)
			bufferspeciesname(STR_VAR_2, SPECIES_TYRUNT)
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_TYRUNT)
		default:
			msgbox(format("That's not a fossil!"))
			closemessage
			release
			end
	}
	closemessage
	msgbox(format("Awesome, revived your fossil into {STR_VAR_2}!"))
	setflag(FLAG_REVIVED_FOSSIL)
	playfanfare(MUS_OBTAIN_ITEM)
	waitfanfare
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		call(NicknamePartyMon)
	}
    elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		call(NicknameBoxMon)
	}           
	else {
		msgbox(format("You don't have any room in your boxes for a new Pok√©mon."))
		goto(End)
	}
	removeitem(VAR_ITEM_ID)
	closemessage
	release
}

script TabithasDrilbur {
	faceplayer
	playmoncry(SPECIES_DRILBUR, CRY_MODE_ENCOUNTER)
	msgbox(format("DRILBUR: Eerrreeh"))
	closemessage
}

script MaxiesLitleo {
	faceplayer
	playmoncry(SPECIES_LITLEO, CRY_MODE_ENCOUNTER)
	msgbox(format("LITLEO: Rrewehweeeew"))
	closemessage
}

script RivalsSquirtle {
	faceplayer
	playmoncry(SPECIES_SQUIRTLE, CRY_MODE_ENCOUNTER)
	msgbox(format("SQUIRTLE: Grrwaaoh"))
	closemessage
}

script RivalsScorbunny {
	faceplayer
	playmoncry(SPECIES_SCORBUNNY, CRY_MODE_ENCOUNTER)
	msgbox(format("SCORBUNNY: Eyyahh"))
	closemessage
}

script RivalsSnivy {
	faceplayer
	playmoncry(SPECIES_SNIVY, CRY_MODE_ENCOUNTER)
	msgbox(format("SNIVY: Wheeeeh"))
	closemessage
}

script NormansAipom {
	faceplayer
	playmoncry(SPECIES_AIPOM, CRY_MODE_ENCOUNTER)
	msgbox(format("AIPOM: Uhhweeehuh"))
	closemessage
}

script WinonasDoduo {
	faceplayer
	playmoncry(SPECIES_DODUO, CRY_MODE_ENCOUNTER)
	msgbox(format("DODUO: Tititi Chao"))
	closemessage
}

script RoxannesNosepass {
	faceplayer
	playmoncry(SPECIES_NOSEPASS, CRY_MODE_ENCOUNTER)
	msgbox(format("NOSEPASS: Uuwheehuu"))
	closemessage
}

script BrawlysPancham {
	faceplayer
	playmoncry(SPECIES_PANCHAM, CRY_MODE_ENCOUNTER)
	msgbox(format("PANCHAM: Cweh Uhr"))
	closemessage
}

script FlannerysCyndaquil {
	faceplayer
	playmoncry(SPECIES_CYNDAQUIL, CRY_MODE_ENCOUNTER)
	msgbox(format("CYNDAQUIL: Rrrrp"))
	closemessage
}

script TatesMimeJr {
	faceplayer
	playmoncry(SPECIES_MIME_JR, CRY_MODE_ENCOUNTER)
	msgbox(format("MIME JR.: Zwhehe Nur"))
	closemessage
}

script LizasMimeJr {
	faceplayer
	playmoncry(SPECIES_MIME_JR, CRY_MODE_ENCOUNTER)
	msgbox(format("MIME JR.: Zwhehe Nur"))
	closemessage
}

script JuansHorsea {
	faceplayer
	playmoncry(SPECIES_AIPOM, CRY_MODE_ENCOUNTER)
	msgbox(format("HORSEA: Nheeheh"))
	closemessage
}

script WattsonsMagnemite {
	faceplayer
	playmoncry(SPECIES_MAGNEMITE, CRY_MODE_ENCOUNTER)
	msgbox(format("MAGNEMITE: Oowheznu"))
	closemessage
}

script CourtneysSkiddo {
	faceplayer
	playmoncry(SPECIES_SKIDDO, CRY_MODE_ENCOUNTER)
	msgbox(format("SKIDDO: Wheherr"))
	closemessage
}

script RivalsAnorith {
	faceplayer
	playmoncry(SPECIES_ANORITH, CRY_MODE_ENCOUNTER)
	msgbox(format("ANORITH: Creyhhurr"))
	closemessage
}

script RivalsAmaura {
	faceplayer
	playmoncry(SPECIES_AMAURA, CRY_MODE_ENCOUNTER)
	msgbox(format("AMAURA: Rheaaaaeh"))
	closemessage
}

script SidneysImpidimp {
	faceplayer
	playmoncry(SPECIES_IMPIDIMP, CRY_MODE_ENCOUNTER)
	msgbox(format("IMPIDIMP: Khrwhazede"))
	closemessage
}

script PhoebesCharcadet {
	faceplayer
	playmoncry(SPECIES_CHARCADET, CRY_MODE_ENCOUNTER)
	msgbox(format("CHARCADET: Zweewoozoop"))
	closemessage
}

script GlaciasSnorunt {
	faceplayer
	playmoncry(SPECIES_SNORUNT, CRY_MODE_ENCOUNTER)
	msgbox(format("SNORUNT: Zwahuhuh"))
	closemessage
}

script DrakesTotodile {
	faceplayer
	playmoncry(SPECIES_TOTODILE, CRY_MODE_ENCOUNTER)
	msgbox(format("TOTODILE: Twiurh"))
	closemessage
}

script WallacesMagikarp {
	faceplayer
	playmoncry(SPECIES_MAGIKARP, CRY_MODE_ENCOUNTER)
	msgbox(format("MAGIKARP: Uwheeuh"))
	closemessage
}

script RivalsTyrogue {
	faceplayer
	playmoncry(SPECIES_TYROGUE, CRY_MODE_ENCOUNTER)
	msgbox(format("TYROGUE: Tsiherm"))
	closemessage
}

script NoGrassBeforeStarterLeft {
	msgbox(format("You don't have a Pok√©mon yet, better not step into the tall grass!"))
	applymovement(OBJ_EVENT_ID_PLAYER, Movement_LeftOne)
	goto(End)
}

script Movement_LeftOne {
	walk_left
	step_end
}

script NoGrassBeforeStarterUp {
	msgbox(format("You don't have a Pok√©mon yet, better not step into the tall grass!"))
	applymovement(OBJ_EVENT_ID_PLAYER, Movement_UpOne)
	goto(End)
}

script Movement_UpOne {
	walk_up
	step_end
}

script NoGym7Before6 {
	msgbox(format("You should probably go back to the gym in Fortree City first."))
	applymovement(OBJ_EVENT_ID_PLAYER, Movement_LeftOne)
	goto(End)
}

script FossilShop {
	if (flag(FLAG_REVIVED_FOSSIL)) {
		msgbox(format("Welcome! I study fossils and sell any extras I find. Would you like to buy one?"), MSGBOX_YESNO)
		if (var(VAR_RESULT) == NO) {
			msgbox(format("I'll be here if you change your mind."))
			goto(End)
		}
		pokemart(FossilPokemart)
	}
	else {
		msgbox(format("Hi! I study fossils."), MSGBOX_YESNO)
	}
	goto(End)
}

script RivalsPichu {
	faceplayer
	playmoncry(SPECIES_PICHU, CRY_MODE_ENCOUNTER)
	msgbox(format("PICHU: Zwwerp"))
	closemessage
}

script WallysRalts {
	faceplayer
	playmoncry(SPECIES_RALTS, CRY_MODE_ENCOUNTER)
	msgbox(format("RALTS: Wheeooh"))
	closemessage
}

script ShellysSandshrew {
	faceplayer
	playmoncry(SPECIES_SANDSHREW, CRY_MODE_ENCOUNTER)
	msgbox(format("SANDSHREW: Eewhew"))
	closemessage
}

script MattsPorygon {
	faceplayer
	playmoncry(SPECIES_PORYGON, CRY_MODE_ENCOUNTER)
	msgbox(format("PORYGON: Crehuwahiwi"))
	closemessage
}

script ScaryGuysGrowlithe {
	faceplayer
	playmoncry(SPECIES_GROWLITHE, CRY_MODE_ENCOUNTER)
	msgbox(format("GROWLITHE: Grweeah"))
	closemessage
}

script ProtectorsSpritzee {
	faceplayer
	playmoncry(SPECIES_SPRITZEE, CRY_MODE_ENCOUNTER)
	msgbox(format("SPRITZEE: Twiihoohoohoo"))
	closemessage
}

script SpeedyKidsVoltorb {
	faceplayer
	playmoncry(SPECIES_VOLTORB, CRY_MODE_ENCOUNTER)
	msgbox(format("VOLTORB: Krrhwwxx"))
	closemessage
}

script CollectorsMeowth {
	faceplayer
	playmoncry(SPECIES_MEOWTH, CRY_MODE_ENCOUNTER)
	msgbox(format("MEOWTH: Dwheeuh"))
	closemessage
}

script BoomDudesGeodude {
	faceplayer
	playmoncry(SPECIES_GEODUDE, CRY_MODE_ENCOUNTER)
	msgbox(format("GEODUDE: Grrwaaaah"))
	closemessage
}

script CrittersSprigatito {
	faceplayer
	playmoncry(SPECIES_SPRIGATITO, CRY_MODE_ENCOUNTER)
	msgbox(format("SPRIGATITO: Knwhiehw"))
	closemessage
}

script SlowFellasGrimer {
	faceplayer
	playmoncry(SPECIES_GRIMER, CRY_MODE_ENCOUNTER)
	msgbox(format("GRIMER: Blaaaaak"))
	closemessage
}

script SmashersTurtwig {
	faceplayer
	playmoncry(SPECIES_PORYGON, CRY_MODE_ENCOUNTER)
	msgbox(format("TURTWIG: Ugugug Wihi"))
	closemessage
}

script PurkatsHonedge {
	faceplayer
	playmoncry(SPECIES_HONEDGE, CRY_MODE_ENCOUNTER)
	msgbox(format("HONEDGE: Dwingg"))
	closemessage
}

script DifficultySwitcher {
	lock
	faceplayer
	if (var(VAR_DIFFICULTY) == 1) {
		msgbox(format("You are currently playing on Normal Mode."))
		goto(End)
	}
	msgbox(format("You are currently playing on Hard Mode."))
	msgbox(format("Would you like to switch to Normal Mode? You cannot switch back."), MSGBOX_YESNO)
	if (var(VAR_RESULT) == 0) {
		msgbox(format("Have fun!"))
		goto(End)
	}
	setvar(VAR_DIFFICULTY, 1)
	msgbox(format("Okay, there you go! Switched to Normal Mode."))
	msgbox(format("Have fun!"))
	closemessage
}

script AbilityChanger {
	lock
	faceplayer
	msgbox(format("Psst...I can give your Pokemon any ability. It'll cost you though...10 BP. Interested?"), MSGBOX_YESNO)
    if (var(VAR_RESULT) == NO) {
		msgbox(format("I'll be here if you change your mind."))
    	goto(End)
	}
	special(ShowBattlePointsWindow)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	if (var(VAR_TEMP_1) < 10) {
		msgbox(format("You don't have enough Battle Points. Come back with some more."))
		special(CloseBattlePointsWindow)
		goto(End)
	}
    msgbox(format("Who should I give a new ability?"), MSGBOX_AUTOCLOSE)
    special(ChoosePartyMon)
    waitstate
    if (var(VAR_0x8004) == 255) {
    	goto(End)
	}
    special(IsSelectedMonEgg)
    if (var(VAR_RESULT) == TRUE) {
		msgbox(format("I can't give an ability to an egg."))
    	goto(End)
	}
    specialvar(VAR_0x8008 GetSelectedMonNicknameAndSpecies)
    bufferspeciesname(2, VAR_0x8008)
	msgbox(format("Which abilities would you like to view?"), MSGBOX_AUTOCLOSE)
	multichoicegrid(8, 2, MULTI_LETTERS, 4, 0)
	msgbox(format("Which ability should I give to {STR_VAR_3}?"), MSGBOX_AUTOCLOSE)
    waitmessage
    closemessage
    special(AbilityTutor)
    waitstate
    if (var(VAR_RESULT) == MULTI_B_PRESSED) {
    	goto(End)
	}
    msgbox(format("And... Done! {STR_VAR_3} now has {STR_VAR_1}!"), MSGBOX_AUTOCLOSE)
	setvar(VAR_0x8004, 10)
	special(TakeFrontierBattlePoints)
	special(CloseBattlePointsWindow)
	playse(SE_SHOP)
	release
}

script HPTypeChangerNPC {
	lock
	faceplayer
	msgbox(format("I can change your Pokemon's Hidden Power type for 2 BP. Interested?"), MSGBOX_YESNO)
    if (var(VAR_RESULT) == NO) {
		msgbox(format("I'll be here if you change your mind."))
		closemessage
    	goto(End)
	}
	special(ShowBattlePointsWindow)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	if (var(VAR_TEMP_1) < 2) {
		msgbox(format("You don't have enough Battle Points. Come back with some more."))
		special(CloseBattlePointsWindow)
		closemessage
		goto(End)
	}
    msgbox(format("Who's Hidden Power type needs changing?"), MSGBOX_AUTOCLOSE)
    special(ChoosePartyMon)
    waitstate
    if (var(VAR_0x8004) == 255) {
    	goto(End)
	}
    special(IsSelectedMonEgg)
    if (var(VAR_RESULT) == TRUE) {
		msgbox(format("I can't change an egg's Hidden Power type."))
    	goto(End)
	}
    specialvar(VAR_0x8008 GetSelectedMonNicknameAndSpecies)
    bufferspeciesname(2, VAR_0x8008)
	msgbox(format("Which type would you like {STR_VAR_3}'s Hidden Power to be?"), MSGBOX_AUTOCLOSE)
    waitmessage
    closemessage
    special(HPTypeChanger)
    waitstate
    if (var(VAR_RESULT) == MULTI_B_PRESSED) {
    	goto(End)
	}
    msgbox(format("And... Done! Changed {STR_VAR_3}'s Hidden Power type to {STR_VAR_1}!"), MSGBOX_AUTOCLOSE)
	setvar(VAR_0x8004, 2)
	special(TakeFrontierBattlePoints)
	special(CloseBattlePointsWindow)
	playse(SE_SHOP)
	release
}

script BPMoveTutor {
	lockall
	faceplayer
	msgbox(format("I can teach your Pok√©mon a powerful move in exchange for 5 Battle Points."))
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	if (var(VAR_TEMP_1) < 2) { // Not Enough BP
		msgbox(format("You don't have enough Battle Points. Come back with some more."))
		closemessage
		releaseall
		end
	}
	msgbox(format("Would you like me to teach your Pok√©mon a move?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		msgbox(format("I'll be here if you change your mind."))
		closemessage
		releaseall
		end
	}
	closemessage
	special(ShowBattlePointsWindow)
	setvar(VAR_0x8004, SCROLL_MULTI_GAME_CORNER_TUTOR_MOVES)
	special(ShowScrollableMultichoice)
	waitstate
	special(CloseBattlePointsWindow)
	switch (var(VAR_RESULT)) {
		default:
			msgbox(format("I'll be here if you change your mind."))
			closemessage
			end
		case 0:
			setvar(VAR_0x8005, MOVE_CLOSE_COMBAT)
		case 1:
			setvar(VAR_0x8005, MOVE_CRUNCH)
		case 2:
			setvar(VAR_0x8005, MOVE_FLARE_BLITZ)
		case 3:
			setvar(VAR_0x8005, MOVE_HYDRO_PUMP)
		case 4:
			setvar(VAR_0x8005, MOVE_AQUA_TAIL)
		case 5:
			setvar(VAR_0x8005, MOVE_DRAGON_RUSH)
		case 6:
			setvar(VAR_0x8005, MOVE_FOCUS_BLAST)
		case 7:
			setvar(VAR_0x8005, MOVE_HEAVY_SLAM)
		case 8:
			setvar(VAR_0x8005, MOVE_LEAF_STORM)
		case 9:
			setvar(VAR_0x8005, MOVE_THRASH)
		case 10:
			setvar(VAR_0x8005, MOVE_OUTRAGE)
		case 11:
			setvar(VAR_0x8005, MOVE_BOOMBURST)
		case 12:
			setvar(VAR_0x8005, MOVE_HURRICANE)
		case 13:
			setvar(VAR_0x8005, MOVE_STONE_EDGE)
		case 14:
			setvar(VAR_0x8005, MOVE_HEAT_WAVE)
		case 15:
			setvar(VAR_0x8005, MOVE_POWER_WHIP)
		case 16:
			setvar(VAR_0x8005, MOVE_RAGING_FURY)
		case 17:
			setvar(VAR_0x8005, MOVE_PSYCHO_BOOST)
		case 18:
			setvar(VAR_0x8005, MOVE_OVERHEAT)
	}
	special(ChooseMonForMoveTutor)
	waitstate
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	setvar(VAR_0x8004, 5)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	special(UpdateBattlePointsWindow)
	releaseall
}

script TestGuy {
	trainerbattle_no_intro(TRAINER_WALLY_VR_1, VictoryRoad_1F_Text_WallyEntranceDefeat)	
}	