raw `
Common_EventScript_PkmnCenterNurse::
	lock
	faceplayer
	setvar VAR_0x8004, 0
	specialvar VAR_RESULT, CountPlayerTrainerStars
	goto_if_eq VAR_RESULT, 4, EventScript_PkmnCenterNurse_GoldCard

	goto EventScript_PkmnCenterNurse_HealPkmn
	end

EventScript_PkmnCenterNurse_Goodbye::
	return

@ VAR_0x8004 is 1 when player has Gold Card; jumps are identical
EventScript_PkmnCenterNurse_HealPkmn::
	incrementgamestat GAME_STAT_USED_POKECENTER
	call EventScript_PkmnCenterNurse_TakeAndHealPkmn
	end

EventScript_PkmnCenterNurse_IllTakeYourPkmn::
	message gText_IllTakeYourPkmn
	return

EventScript_PkmnCenterNurse_IllTakeYourPkmn2::
	message gText_IllTakeYourPkmn2
	return

EventScript_PkmnCenterNurse_TakeAndHealPkmn::
	applymovement VAR_0x800B, Movement_PkmnCenterNurse_Turn @ Changed from Common_Movement_WalkInPlaceFasterLeft to force the follower to enter their Pok√© Ball
	waitmovement 0
	dofieldeffect FLDEFF_POKECENTER_HEAL
.if OW_UNION_DISABLE_CHECK == FALSE && OW_FLAG_MOVE_UNION_ROOM_CHECK != 0
	setflag OW_FLAG_MOVE_UNION_ROOM_CHECK
	call CableClub_OnResume
	clearflag OW_FLAG_MOVE_UNION_ROOM_CHECK
.endif
	waitfieldeffect FLDEFF_POKECENTER_HEAL
	applymovement VAR_0x800B, Common_Movement_WalkInPlaceFasterDown
	waitmovement 0
	special HealPlayerParty
	callnative UpdateFollowingPokemon
	return

EventScript_PkmnCenterNurse_CheckTrainerHillAndUnionRoom::
	specialvar VAR_RESULT, PlayerNotAtTrainerHillEntrance
	goto_if_eq VAR_RESULT, 0, EventScript_PkmnCenterNurse_ReturnPkmn
	specialvar VAR_RESULT, BufferUnionRoomPlayerName
	copyvar VAR_0x8008, VAR_RESULT
	goto_if_eq VAR_0x8008, 0, EventScript_PkmnCenterNurse_ReturnPkmn
	goto_if_eq VAR_0x8008, 1, EventScript_PkmnCenterNurse_PlayerWaitingInUnionRoom
	end

@ VAR_0x8004 is 1 when player has Gold Card
EventScript_PkmnCenterNurse_ReturnPkmn::
	goto_if_eq VAR_0x8004, 1, EventScript_PkmnCenterNurse_ReturnPkmn2
	message gText_RestoredPkmnToFullHealth
	waitmessage
	applymovement VAR_0x800B, Movement_PkmnCenterNurse_Bow
	waitmovement 0
	message gText_WeHopeToSeeYouAgain
	return

EventScript_PkmnCenterNurse_ReturnPkmn2::
	message gText_ThankYouForWaiting
	waitmessage
	applymovement VAR_0x800B, Movement_PkmnCenterNurse_Bow
	waitmovement 0
	message gText_WeHopeToSeeYouAgain2
	return

EventScript_PkmnCenterNurse_PlayerWaitingInUnionRoom::
	goto_if_set FLAG_NURSE_UNION_ROOM_REMINDER, EventScript_PkmnCenterNurse_ReturnPkmn
	msgbox gText_RestoredPkmnToFullHealth, MSGBOX_DEFAULT
	setflag FLAG_NURSE_UNION_ROOM_REMINDER
	message CableClub_Text_PlayerIsWaiting
	waitmessage
	applymovement VAR_0x800B, Movement_PkmnCenterNurse_Bow
	waitmovement 0
	message gText_WeHopeToSeeYouAgain
	return

EventScript_PkmnCenterNurse_CheckPokerus::
	specialvar VAR_RESULT, IsPokerusInParty
	goto_if_eq VAR_RESULT, TRUE, EventScript_PkmnCenterNurse_ExplainPokerus
	goto_if_eq VAR_RESULT, FALSE, EventScript_PkmnCenterNurse_CheckTrainerHillAndUnionRoom
	end

EventScript_PkmnCenterNurse_ExplainPokerus::
	message gText_PokerusExplanation
	setflag FLAG_POKERUS_EXPLAINED
	return

EventScript_PkmnCenterNurse_GoldCard::
	goto_if_set FLAG_NURSE_MENTIONS_GOLD_CARD, EventScript_PkmnCenterNurse_AskForUsual
	setflag FLAG_NURSE_MENTIONS_GOLD_CARD
	msgbox gText_WelcomeCutShort, MSGBOX_DEFAULT
	playse SE_PIN
	applymovement VAR_0x800B, Common_Movement_ExclamationMark
	waitmovement 0
	applymovement VAR_0x800B, Common_Movement_Delay48
	waitmovement 0
	msgbox gText_NoticesGoldCard, MSGBOX_YESNO
	goto_if_eq VAR_RESULT, YES, EventScript_PkmnCenterNurse_GoldCardHealPkmn
	message gText_WeHopeToSeeYouAgain2
	return

EventScript_PkmnCenterNurse_AskForUsual::
	msgbox gText_YouWantTheUsual, MSGBOX_YESNO
	goto_if_eq VAR_RESULT, YES, EventScript_PkmnCenterNurse_GoldCardHealPkmn
	message gText_WeHopeToSeeYouAgain2
	return

EventScript_PkmnCenterNurse_GoldCardHealPkmn::
	setvar VAR_0x8004, 1
	goto EventScript_PkmnCenterNurse_HealPkmn
	end

Movement_PkmnCenterNurse_Bow:
	nurse_joy_bow
	delay_4
	step_end

Movement_PkmnCenterNurse_Turn:
	walk_in_place_faster_left
	step_end
`

script EventScript_NatureMintNPC {
	lock
	message(format("Would you like to make a Nature Mint with a Blank Nature Mint?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		goto(End)
	}
	checkitem(ITEM_BLANK_MINT, 1)
	if (var(VAR_RESULT) != 1) { // No Blank Mints
		msgbox(format("You do not have any Blank Nature Mints."))
		goto(End)
	}
	msgbox(format("Which stat would you like the mint to increase?"))
	multichoicegrid(10, 4, MULTI_STAT_NAMES_NO_HP, 2, 0)
	if (var(VAR_RESULT) == 5) { // Exit
		goto(End)
	}
	elif (var(VAR_RESULT) == 0) {
		setvar(RAISE, 0)
	}
	elif (var(VAR_RESULT) == 1) {
		setvar(RAISE, 1)
	}
	elif (var(VAR_RESULT) == 2) {
		setvar(RAISE, 2)
	}
	elif (var(VAR_RESULT) == 3) {
		setvar(RAISE, 3)
	}
	elif (var(VAR_RESULT) == 4) {
		setvar(RAISE, 4)
	}
	msgbox(format("Which stat would you like the mint to decrease?"))
	multichoicegrid(8, 4, MULTI_STAT_NAMES_NO_HP, 2, 0)
	if (var(VAR_RESULT) == 5) { // Exit
		goto(End)
	}
	elif (var(VAR_RESULT) == 0) {
		setvar(LOWER, 0)
	}
	elif (var(VAR_RESULT) == 1) {
		setvar(LOWER, 1)
	}
	elif (var(VAR_RESULT) == 2) {
		setvar(LOWER, 2)
	}
	elif (var(VAR_RESULT) == 3) {
		setvar(LOWER, 3)
	}
	elif (var(VAR_RESULT) == 4) {
		setvar(LOWER, 4)
	}
	if (var(RAISE) == 0 && var(LOWER) == 0 
	    || var(RAISE) == 1 && var(LOWER) == 1
		|| var(RAISE) == 2 && var(LOWER) == 2
		|| var(RAISE) == 3 && var(LOWER) == 3
		|| var(RAISE) == 4 && var(LOWER) == 4) { // Neutral Mint
		message(format("Are you sure you want to make a Neutral Nature Mint?"))
	    yesnobox(5, 2)
		if (var(VAR_RESULT) == 1) {
			giveitem(ITEM_SERIOUS_MINT)
			removeitem(ITEM_BLANK_MINT, 1)
		}
	}
	switch (var(RAISE)) {
		case 0: // + Attack
			switch (var(LOWER)) {
				case 1: // - Defense, Lonely
					message(format("You would like to make a Lonely Nature Mint (+Atk -Def)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_LONELY_MINT) // this plays sfx and sends a message
					removeitem(ITEM_BLANK_MINT, 1)
				case 2: // - Special Attack, Adamant
					message(format("You would like to make an Adamant Nature Mint (+Atk -SpA)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_ADAMANT_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 3: // - Special Defense, Naughty
					message(format("You would like to make a Naughty Nature Mint (+Atk -SpD)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_NAUGHTY_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 4: // - Speed, Brave
					message(format("You would like to make a Brave Nature Mint (+Atk -Spe)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_BRAVE_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				default:
					goto(End)
			}
		case 1: // + Defense
			switch (var(LOWER)) {
				case 0: // - Attack, Bold
					message(format("You would like to make a Bold Nature Mint (+Def -Atk)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_BOLD_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 2: // - Special Attack, Impish
					message(format("You would like to make an Impish Nature Mint (+Def -SpA)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_IMPISH_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 3: // - Special Defense, Lax
					message(format("You would like to make a Lax Nature Mint (+Def -SpD)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_LAX_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 4: // - Speed, Relaxed
					message(format("You would like to make a Relaxed Nature Mint (+Def -Spe)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_RELAXED_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				default:
					goto(End)
			}
		case 2: // + Special Attack
			switch (var(LOWER)) {
				case 0: // - Attack, Modest
					message(format("You would like to make a Modest Nature Mint (+SpA -Atk)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_MODEST_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 1: // - Defense, Mild
					message(format("You would like to make a Mild Nature Mint (+SpA -Def)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_MILD_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 3: // - Special Defense, Rash
					message(format("You would like to make a Rash Nature Mint (+SpA -SpD)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_RASH_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 4: // - Speed, Quiet
					message(format("You would like to make a Quiet Nature Mint (+SpA -Spe)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_QUIET_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				default:
					goto(End)
			}
		case 3: // + Special Defense
			switch (var(LOWER)) {
				case 0: // - Attack, Calm
					message(format("You would like to make a Calm Nature Mint (+SpD -Atk)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_CALM_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 1: // - Defense, Gentle
					message(format("You would like to make a Gentle Nature Mint (+SpD -Def)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_GENTLE_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 2: // - Special Attack, Careful
					message(format("You would like to make a Careful Nature Mint (+SpD -SpA)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_CAREFUL_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 4: // - Speed, Sassy
					message(format("You would like to make a Sassy Nature Mint (+SpD -Spe)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_SASSY_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				default:
					goto(End)
			}
		case 4: // + Speed
			switch (var(LOWER)) {
				case 0: // - Attack, Timid
					message(format("You would like to make a Timid Nature Mint (+Spe -Atk)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_TIMID_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 1: // - Defense, Hasty
					message(format("You would like to make a Hasty Nature Mint (+Spe -Def)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_HASTY_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 2: // - Special Attack, Jolly
					message(format("You would like to make a Jolly Nature Mint (+Spe -SpA)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_JOLLY_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				case 3: // - Special Defense, Naive
					message(format("You would like to make a Naive Nature Mint (+Spe -SpD)?"))
	    	    	yesnobox(5, 2)
					if (var(VAR_RESULT) == 0) { // No
						goto(End)
					}
					giveitem(ITEM_NAIVE_MINT)
					removeitem(ITEM_BLANK_MINT, 1)
				default:
					goto(End)
			}
	}
	goto(End)
}

script EventScript_PreDamageNPC {
	lock
	msgbox(format("Would you like to Pre-Damage or Pre-Status one of your Pok√©mon?"))
	multichoice(10, 4, MULTI_PREDAMAGE, 0)
	if (var(VAR_RESULT) == 0) { // PreDamage
		special(ChoosePartyMon)
		waitstate
		specialvar(VAR_RESULT, ScriptGetPartyMonSpecies)
		if (var(VAR_RESULT) == SPECIES_EGG) {
			msgbox(format("A Pok√©mon Egg cannot be Pre-Damaged."))
			goto(End)
		}
		special(IsChosenMonFainted)
		if (var(VAR_RESULT) == TRUE) {
			msgbox(format("A Fainted Pok√©mon cannot be Pre-Damaged."))
			goto(End)
		} 
		call(Common_ShowSelectDamageScreen)
		waitstate
		specialvar(0x8007, GetSelectedMonNicknameAndSpecies)
		playmoncry(0x8007, 0)
		waitmoncry
		msgbox(format("Set your {STR_VAR_1}'s HP to {STR_VAR_3}."))
	}
	elif (var(VAR_RESULT) == 1) { // PreStatus
		special(ChoosePartyMon)
		waitstate
		specialvar(VAR_RESULT, ScriptGetPartyMonSpecies)
		if (var(VAR_RESULT) == SPECIES_EGG) {
			msgbox(format("A Pok√©mon Egg cannot be Pre-Statused."))
			goto(End)
		}
		special(IsChosenMonFainted)
		if (var(VAR_RESULT) == TRUE) {
			msgbox(format("A Fainted Pok√©mon cannot be Pre-Statused."))
			goto(End)
		}
		msgbox(format("Which Status would you like to give the Pok√©mon?"))
		multichoicegrid(8, 4, MULTI_STATUSES, 2, 0)
		if (var(VAR_RESULT) == 0) {
			setvar(STATUS, 0)
		} elif (var(VAR_RESULT) == 1) {
			setvar(STATUS, 1)
		} elif (var(VAR_RESULT) == 2) {
			setvar(STATUS, 2)
		} elif (var(VAR_RESULT) == 3) {
			setvar(STATUS, 3)
		} elif (var(VAR_RESULT) == 4) {
			setvar(STATUS, 4)
		} elif (var(VAR_RESULT) == 5) {
			setvar(STATUS, 5)
		}
		switch (var(STATUS)) {
			case 0: // Poison
				special(IsChosenMonSteelType)
				if (var(VAR_RESULT) == TRUE) {
					getseenmon(757) // Salandit
					if (var(VAR_RESULT) == FALSE) {
						msgbox(format("Steel-type Pok√©mon cannot be Poisoned."))
						goto(End)
					}
				}
				special(IsChosenMonPoisonType)
				if (var(VAR_RESULT) == TRUE) {
					getseenmon(757) // Salandit
					if (var(VAR_RESULT) == FALSE) {
						msgbox(format("Poison-type Pok√©mon cannot be Poisoned."))
						goto(End)
					}					
				}
				setstatus1(STATUS1_POISON, VAR_0x8004)
				specialvar(0x8007, GetSelectedMonNicknameAndSpecies)
				playmoncry(0x8007, 0)
				waitmoncry
				msgbox(format("Inflicted your {STR_VAR_1} with Poison."))
			case 1: // Paralysis
				special(IsChosenMonElectricType)
				if (var(VAR_RESULT) == TRUE) {
					msgbox(format("Electric-type Pok√©mon cannot be Paralyzed."))
					goto(End)
				}
				setstatus1(STATUS1_PARALYSIS, VAR_0x8004)
				specialvar(0x8007, GetSelectedMonNicknameAndSpecies)
				playmoncry(0x8007, 0)
				waitmoncry
				msgbox(format("Inflicted your {STR_VAR_1} with Paralysis."))
			case 2: // Sleep
				special(IsChosenMonImmuneToSleepDueToAbility)
				if (var(VAR_RESULT) == TRUE) {
					specialvar(0x8007, GetSelectedMonNicknameAndSpecies)
					msgbox(format("{STR_VAR_1}'s ability prevents it from being put to Sleep."))
					goto(End)
				}
				setstatus1(STATUS1_SLEEP_TURN(1), VAR_0x8004)
				specialvar(0x8007, GetSelectedMonNicknameAndSpecies)
				playmoncry(0x8007, 0)
				waitmoncry
				msgbox(format("Inflicted your {STR_VAR_1} with Sleep."))
			case 3: // Burn
				special(IsChosenMonFireType)
				if (var(VAR_RESULT) == TRUE) {
					msgbox(format("Fire-type Pok√©mon cannot be Burned."))
					goto(End)
				}
				setstatus1(STATUS1_BURN, VAR_0x8004)
				specialvar(0x8007, GetSelectedMonNicknameAndSpecies)
				playmoncry(0x8007, 0)
				waitmoncry
				msgbox(format("Inflicted your {STR_VAR_1} with Burn."))
			case 4: // Freeze
				special(IsChosenMonIceType)
				if (var(VAR_RESULT) == TRUE) {
					msgbox(format("Ice-type Pok√©mon cannot be Frozen."))
					goto(End)
				}
				setstatus1(STATUS1_FREEZE, VAR_0x8004)
				specialvar(0x8007, GetSelectedMonNicknameAndSpecies)
				playmoncry(0x8007, 0)
				waitmoncry
				msgbox(format("Inflicted your {STR_VAR_1} with Freeze."))
			case 5: // Toxic
				special(IsChosenMonSteelType)
				if (var(VAR_RESULT) == TRUE) {
					getseenmon(757) // Salandit
					if (var(VAR_RESULT) == FALSE) {
						msgbox(format("Steel-type Pok√©mon cannot be Badly Poisoned."))
						goto(End)
					}
				}
				special(IsChosenMonPoisonType)
				if (var(VAR_RESULT) == TRUE) {
					getseenmon(757) // Salandit
					if (var(VAR_RESULT) == FALSE) {
						msgbox(format("Poison-type Pok√©mon cannot be Badly Poisoned."))
						goto(End)
					}
				}
				setstatus1(STATUS1_TOXIC_POISON, VAR_0x8004)
				specialvar(0x8007, GetSelectedMonNicknameAndSpecies)
				playmoncry(0x8007, 0)
				waitmoncry
				msgbox(format("Inflicted your {STR_VAR_1} with Toxic Poison."))
			default:
				goto(End)
		}
	}
	goto(End)
}

script EventScript_HyperTrainNPC {
	lock
	msgbox(format("Would you like to Hyper Train one of your Pok√©mon?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		goto(End)
	}
	checkitem(ITEM_BOTTLE_CAP, 1)
	if (var(VAR_RESULT) != 1) { // No Bottle Caps
		msgbox(format("You do not have any Bottle Caps."))
		goto(End)
	}
	special(ChoosePartyMon)
	waitstate
	specialvar(VAR_RESULT, ScriptGetPartyMonSpecies)
	if (var(VAR_RESULT) == SPECIES_EGG) {
		msgbox(format("A Pok√©mon Egg cannot be Hyper Trained."))
		goto(End)
	}
	msgbox(format("Which stat would you like to train?"))
	multichoicegrid(10, 4, MULTI_STAT_NAMES, 2, 0)
	if (var(VAR_RESULT) == 0)
	{
		setvar(STAT, 0)
		canhypertrain(0, VAR_0x8004)
	}
	elif (var(VAR_RESULT) == 1)
	{
		setvar(STAT, 1)
		canhypertrain(1, VAR_0x8004)
	}
	elif (var(VAR_RESULT) == 2)
	{
		setvar(STAT, 2)
		canhypertrain(2, VAR_0x8004)
	}
	elif (var(VAR_RESULT) == 3)
	{
		setvar(STAT, 3)
		canhypertrain(3, VAR_0x8004)
	}
	elif (var(VAR_RESULT) == 4)
	{
		setvar(STAT, 4)
		canhypertrain(4, VAR_0x8004)
	}
	elif (var(VAR_RESULT) == 5)
	{
		setvar(STAT, 5)
		canhypertrain(5, VAR_0x8004)
	}
	sethypertrainstat(STAT)
	specialvar(0x8007, GetSelectedMonNicknameAndSpecies)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("Your {STR_VAR_1}'s {STR_VAR_3} is already at it's maximum!"))
		goto(End)
	}
	switch (var(STAT))
	{
		case 0: // HP
			hypertrain(0, VAR_0x8004)
		case 1: // Attack
			hypertrain(1, VAR_0x8004)
		case 2: // Defense
			hypertrain(2, VAR_0x8004)
		case 3: // Special Attack
			hypertrain(3, VAR_0x8004)
		case 4: // Special Defense
			hypertrain(4, VAR_0x8004)
		case 5: // Speed
			hypertrain(5, VAR_0x8004)
	}
	playmoncry(0x8007, 0)
	waitmoncry
	msgbox(format("Your {STR_VAR_1}'s {STR_VAR_3} has been hyper trained."))
	removeitem(ITEM_BOTTLE_CAP, 1)
	goto(End)
}

script BPShopClerk {
	special(ShowBattlePointsWindow) // Show the player's BP in a little window on the top left
	setvar(VAR_0x8004, SCROLL_MULTI_BF_EXCHANGE_CORNER_HOLD_ITEM_VENDOR) // Setting the shop items,
	// I just overwrote the items in SCROLL_MULTI_BF_EXCHANGE_CORNER_HOLD_ITEM_VENDOR in src/field_specials.c with my own text variables
	// you could also just change the used text variables in src/strings.c
	// note that you will need to edit src/data/battle_frontier/battle_frontier_exchange_corner.h for the correct items to be displayed
	// you can just not show/close it here if you don't wanna do that
	// and add to src/strings.c & include/strings.h for item descriptions, not sure where this text is used tho
	special(ShowFrontierExchangeCornerItemIconWindow) // Show the little item preview in the bottom left
	special(ShowScrollableMultichoice) // Show the multichoice, the chosen item index is set to VAR_RESULT
	waitstate
	special(CloseFrontierExchangeCornerItemIconWindow) // Close the item preview window when an item is chosen
	special(CloseBattlePointsWindow) // Close the BP window
	switch (var(VAR_RESULT)) {
		case 0:
			msgbox(format("You would like to buy an Eviolite?"))
			yesnobox(8, 4)
			if (var(VAR_RESULT) == 0) { // No
				goto(End)
			}
			// * There doesn't seem to be a need to set 8008 to the price,
			// just compare to the value instead of a var in 1*
			// and set 8004 directly to the value instead of a var in 2*
			//setvar(VAR_0x8008, 4) // Price | *
			setvar(VAR_0x8009, ITEM_EVIOLITE) // Item to give the player
			specialvar(VAR_TEMP_1, GetFrontierBattlePoints) // Get the player's BP
			if (var(VAR_TEMP_1) < 4) { // If not enough BP | 1*
				msgbox(format("You don't have enough Battle Points."))
				goto(End)
			}
			checkitemspace(VAR_0x8009) // Check if the player has enough bag space for the item
			if (var(VAR_RESULT) == FALSE) { // ^ if not
				msgbox(format("You don't have bag space for this item."))
				goto(End)
			}
			//copyvar(VAR_0x8004, VAR_0x8008) // Set 8004 to 8008 | 2*
			setvar(VAR_0x8004, 4) // ^
			special(TakeFrontierBattlePoints) // Take the amount of BP in 8004
			playse(SE_SHOP)
			additem(VAR_0x8009) // Give the player the item
			msgbox(format("Here is your Eviolite! Thank you very much."))
			special(UpdateBattlePointsWindow) // Update the window to show the purchase
	}
	goto(End)
}

script EggMoveTutor {
	msgbox(format("I can teach one of your Pok√©mon one of their egg moves in exchange for one Battle Point."))
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	if (var(VAR_TEMP_1) < 1) { // No BP
		msgbox(format("You don't have any Battle Points. Come back with some."))
		goto(End)
	}
	msgbox(format("Would you like to do that?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		goto(End)
	}
	special(ChooseMonForMoveRelearner)
	waitstate
	if (var(VAR_0x8004) == PARTY_NOTHING_CHOSEN) { // Pressed 'B' in selection screen
		goto(End)
	}
	special(IsSelectedMonEgg)
	if (var(VAR_RESULT) == TRUE) {
		msgbox(format("I can't teach a move to an Egg."))
		goto(End)
	}
	special(DoesChosenMonHaveEggMoves)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("This Pok√©mon does not have any egg moves."))
		goto(End)
	}
	specialvar(0x8007, GetSelectedMonNicknameAndSpecies)
	msgbox(format("Which move would you like me to teach {STR_VAR_1}?"))
	special(TeachEggMove)
	waitstate
	setvar(VAR_0x8004, 1)
	special(TakeFrontierBattlePoints)
	playse(SE_SHOP)
	goto(End)
}

// script BPMoveTutor {
// 	// a move tutor is pretty much the same as a shop with a few differences
// 	special(ShowBattlePointsWindow) // Show the player's BP in a little window on the top left
// 	setvar(VAR_0x8004, SCROLL_MULTI_BF_MOVE_TUTOR_1) // Setting the moves,
// 	// I just overwrote the items in SCROLL_MULTI_BF_MOVE_TUTOR_1 in src/field_specials.c with my own text variables
// 	// you could also just change the used text variables in src/strings.c
// 	// note that you will need to edit src/data/battle_frontier/battle_frontier_exchange_corner.h for the correct items to be displayed
// 	// you can just not show/close it here if you don't wanna do that
// 	// and add to src/strings.c & include/strings.h for item descriptions, not sure where this text is used tho
// 	special(ShowScrollableMultichoice) // Show the multichoice, the chosen item index is set to VAR_RESULT
// 	waitstate
// 	special(CloseBattlePointsWindow) // Close the BP window
// 	switch (var(VAR_RESULT)) {
// 		case 0:
// 			msgbox(format("You would like to buy an Eviolite?"))
// 			yesnobox(8, 4)
// 			if (var(VAR_RESULT) == 0) { // No
// 				goto(End)
// 			}
// 			// * There doesn't seem to be a need to set 8008 to the price,
// 			// just compare to the value instead of a var in 1*
// 			// and set 8004 directly to the value instead of a var in 2*
// 			//setvar(VAR_0x8008, 4) // Price | *
// 			setvar(VAR_0x8009, ITEM_EVIOLITE) // Item to give the player
// 			specialvar(VAR_TEMP_1, GetFrontierBattlePoints) // Get the player's BP
// 			if (var(VAR_TEMP_1) < 4) { // If not enough BP | 1*
// 				msgbox(format("You don't have enough Battle Points."))
// 				goto(End)
// 			}
// 			checkitemspace(VAR_0x8009) // Check if the player has enough bag space for the item
// 			if (var(VAR_RESULT) == FALSE) { // ^ if not
// 				msgbox(format("You don't have bag space for this item."))
// 				goto(End)
// 			}
// 			//copyvar(VAR_0x8004, VAR_0x8008) // Set 8004 to 8008 | 2*
// 			setvar(VAR_0x8004, 4) // ^
// 			special(TakeFrontierBattlePoints) // Take the amount of BP in 8004
// 			playse(SE_SHOP)
// 			additem(VAR_0x8009) // Give the player the item
// 			msgbox(format("Here is your Eviolite! Thank you very much."))
// 			special(UpdateBattlePointsWindow) // Update the window to show the purchase
// 	}
// 	closemessage
// }

script freebp {
	GiveBP(5)
}

script EventScript_FishermanSalesman {
	lockall
	msgbox(format("I am the master fisherman. I have travelled all throughout Hoenn and caught every type of fish there is."))
	checkmoney(500)
	if (var(VAR_RESULT) == FALSE) { // Player has < 500
	msgbox(format("You don't have enough money to buy any fish. Come back later with more money."))
		goto(End)
	}
	msgbox(format("Would you like to buy one?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		goto(End)
	}
	setvar(VAR_0x8004, SCROLL_MULTI_FISH)
	showmoneybox(0, 0)
	special(ShowScrollableMultichoice)
	waitstate
	switch (var(VAR_RESULT))
	{
		case 0: // Magikarp
			call(TryBuyMagikarp)
		case 1: // Goldeen
			call(TryBuyGoldeen)
		case 2: // Remoraid
			call(TryBuyRemoraid)
		case 3: // Feebas
			call(TryBuyFeebas)
		case 4: // Finneon
			call(TryBuyFinneon)
		case 5: // Tynamo
			call(TryBuyTynamo)
		case 6: // Arrokuda
			call(TryBuyArrokuda)
		case 7: // Barboach
			call(TryBuyBarboach)
		case 8: // Chinchou
			call(TryBuyChinchou)
		case 8: // Carvanha
			call(TryBuyCarvanha)
		case 10: // Qwilfish
			call(TryBuyQwilfish)
		case 11: // Basculin
			call(TryBuyBasculin)
		case 12: // Cosmog
			call(TryBuyCosmog)
		default:
			goto(End)
	}
	goto(End)
}

script TryBuyMagikarp {
	msgbox(format("You would like to buy Magikarp for ¬•500?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		hidemoneybox
		goto(End)
	}
	removemoney(500)
	updatemoneybox
	givemon(SPECIES_MAGIKARP, 5, ITEM_NONE, ITEM_LURE_BALL)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Magikarp."))
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Magikarp."))
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room for a new Pok√©mon."))
		goto(End)
	}
}

script TryBuyGoldeen {
	msgbox(format("You would like to buy Goldeen for ¬•500?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		hidemoneybox
		goto(End)
	}
	removemoney(500)
	updatemoneybox
	givemon(SPECIES_GOLDEEN, 5, ITEM_NONE, ITEM_LURE_BALL)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Goldeen."))
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Goldeen."))
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room for a new Pok√©mon."))
		goto(End)
	}
}

script TryBuyRemoraid {
	msgbox(format("You would like to buy Remoraid for ¬•500?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		hidemoneybox
		goto(End)
	}
	removemoney(500)
	updatemoneybox
	givemon(SPECIES_REMORAID, 5, ITEM_NONE, ITEM_LURE_BALL)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Remoraid."))
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Remoraid."))
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room for a new Pok√©mon."))
		goto(End)
	}
}

script TryBuyFeebas {
	checkmoney(1000)
	if (var(VAR_RESULT) == FALSE) { // Player has < 1000
	msgbox(format("You don't have enough money to buy Feebas. Come back later with more money."))
		goto(End)
	}
	msgbox(format("You would like to buy Feebas for ¬•1000?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		hidemoneybox
		goto(End)
	}
	removemoney(1000)
	updatemoneybox
	givemon(SPECIES_FEEBAS, 5, ITEM_NONE, ITEM_LURE_BALL)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Feebas."))
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Feebas."))
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room for a new Pok√©mon."))
		goto(End)
	}
}

script TryBuyFinneon {
	checkmoney(1000)
	if (var(VAR_RESULT) == FALSE) { // Player has < 1000
	msgbox(format("You don't have enough money to buy Finneon. Come back later with more money."))
		goto(End)
	}
	msgbox(format("You would like to buy Finneon for ¬•1000?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		hidemoneybox
		goto(End)
	}
	removemoney(1000)
	updatemoneybox
	givemon(SPECIES_FINNEON, 5, ITEM_NONE, ITEM_LURE_BALL)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Finneon."))
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Finneon."))
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room for a new Pok√©mon."))
		goto(End)
	}
}

script TryBuyTynamo {
	checkmoney(1000)
	if (var(VAR_RESULT) == FALSE) { // Player has < 1000
	msgbox(format("You don't have enough money to buy Tynamo. Come back later with more money."))
		goto(End)
	}
	msgbox(format("You would like to buy Tynamo for ¬•1000?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		hidemoneybox
		goto(End)
	}
	removemoney(1000)
	updatemoneybox
	givemon(SPECIES_TYNAMO, 5, ITEM_NONE, ITEM_LURE_BALL)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Tynamo."))
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Tynamo."))
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room for a new Pok√©mon."))
		goto(End)
	}
}

script TryBuyArrokuda {
	checkmoney(1000)
	if (var(VAR_RESULT) == FALSE) { // Player has < 1000
	msgbox(format("You don't have enough money to buy Arrokuda. Come back later with more money."))
		goto(End)
	}
	msgbox(format("You would like to buy Arrokuda for ¬•1000?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		hidemoneybox
		goto(End)
	}
	removemoney(1000)
	updatemoneybox
	givemon(SPECIES_ARROKUDA, 5, ITEM_NONE, ITEM_LURE_BALL)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Arrokuda."))
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Arrokuda."))
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room for a new Pok√©mon."))
		goto(End)
	}
}

script TryBuyBarboach {
	checkmoney(1000)
	if (var(VAR_RESULT) == FALSE) { // Player has < 1000
	msgbox(format("You don't have enough money to buy Barboach. Come back later with more money."))
		goto(End)
	}
	msgbox(format("You would like to buy Barboach for ¬•1000?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		hidemoneybox
		goto(End)
	}
	removemoney(1000)
	updatemoneybox
	givemon(SPECIES_BARBOACH, 5, ITEM_NONE, ITEM_LURE_BALL)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Barboach."))
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Barboach."))
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room for a new Pok√©mon."))
		goto(End)
	}
}

script TryBuyChinchou {
	checkmoney(5000)
	if (var(VAR_RESULT) == FALSE) { // Player has < 5000
	msgbox(format("You don't have enough money to buy Chinchou. Come back later with more money."))
		goto(End)
	}
	msgbox(format("You would like to buy Chinchou for ¬•5000?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		hidemoneybox
		goto(End)
	}
	removemoney(5000)
	updatemoneybox
	givemon(SPECIES_CHINCHOU, 5, ITEM_NONE, ITEM_LURE_BALL)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Chinchou."))
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Chinchou."))
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room for a new Pok√©mon."))
		goto(End)
	}
}

script TryBuyCarvanha {
	checkmoney(5000)
	if (var(VAR_RESULT) == FALSE) { // Player has < 5000
	msgbox(format("You don't have enough money to buy Carvanha. Come back later with more money."))
		goto(End)
	}
	msgbox(format("You would like to buy Carvanha for ¬•5000?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		hidemoneybox
		goto(End)
	}
	removemoney(5000)
	updatemoneybox
	givemon(SPECIES_CARVANHA, 5, ITEM_NONE, ITEM_LURE_BALL)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Carvanha."))
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Carvanha."))
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room for a new Pok√©mon."))
		goto(End)
	}
}

script TryBuyQwilfish {
	checkmoney(10000)
	if (var(VAR_RESULT) == FALSE) { // Player has < 10000
	msgbox(format("You don't have enough money to buy Qwilfish. Come back later with more money."))
		goto(End)
	}
	msgbox(format("You would like to buy Qwilfish for ¬•10000?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		hidemoneybox
		goto(End)
	}
	removemoney(10000)
	updatemoneybox
	givemon(SPECIES_QWILFISH_HISUI, 5, ITEM_NONE, ITEM_LURE_BALL)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Qwilfish."))
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Qwilfish."))
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room for a new Pok√©mon."))
		goto(End)
	}
}

script TryBuyBasculin {
	checkmoney(10000)
	if (var(VAR_RESULT) == FALSE) { // Player has < 10000
	msgbox(format("You don't have enough money to buy Basculin. Come back later with more money."))
		goto(End)
	}
	msgbox(format("You would like to buy Basculin for ¬•10000?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		hidemoneybox
		goto(End)
	}
	removemoney(10000)
	updatemoneybox
	givemon(SPECIES_BASCULIN_WHITE_STRIPED, 5, ITEM_NONE, ITEM_LURE_BALL)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Basculin."))
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Basculin."))
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room for a new Pok√©mon."))
		goto(End)
	}
}

script TryBuyCosmog {
	checkmoney(50000)
	if (var(VAR_RESULT) == FALSE) { // Player has < 50000
	msgbox(format("You don't have enough money to buy Cosmog. Come back later with more money."))
		goto(End)
	}
	msgbox(format("You would like to buy Cosmog for ¬•50000?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 0) { // No
		hidemoneybox
		goto(End)
	}
	removemoney(50000)
	updatemoneybox
	givemon(SPECIES_COSMOG, 5, ITEM_NONE, ITEM_LURE_BALL)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Cosmog."))
		call(NicknamePartyMon)
	}
	elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare(MUS_OBTAIN_ITEM)
		msgbox(format("Obtained Cosmog."))
		call(NicknameBoxMon)
	}
	else {
		msgbox(format("You don't have any room for a new Pok√©mon."))
		goto(End)
	}
}

script NicknamePartyMon {
	msgbox(format("Do you want to give it a nickame?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 1) { // Yes
		call(Common_EventScript_GetGiftMonPartySlot)
		call(Common_EventScript_GetGiftMonPartySlot)
	}
}

script NicknameBoxMon {
	msgbox(format("Do you want to give it a nickame?"))
	yesnobox(8, 4)
	if (var(VAR_RESULT) == 1) { // Yes
		call(Common_EventScript_NameReceivedBoxMon)
	}
	setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_MAGIKARP)
	bufferspeciesname(STR_VAR_2, VAR_TEMP_TRANSFERRED_SPECIES)
	call(Common_EventScript_TransferredToPC)
}

script End {
	waitmessage
	hidemoneybox
	releaseall
}